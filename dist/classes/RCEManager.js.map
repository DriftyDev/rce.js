{"version":3,"file":"RCEManager.js","sourceRoot":"","sources":["../../src/classes/RCEManager.ts"],"names":[],"mappings":";;;;;AASA,4CAMsB;AACtB,2BAA+B;AAC/B,sDAA8B;AAC9B,oCAAqC;AACrC,sDAA8B;AAC9B,qCAA+B;AAmB/B,MAAqB,UAAW,SAAQ,iBAAS;IACvC,KAAK,CAAS;IACd,QAAQ,CAAS;IACjB,MAAM,CAAS;IACf,IAAI,GAAU;QACpB,aAAa,EAAE,EAAE;QACjB,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,CAAC;KACd,CAAC;IACM,eAAe,GAAY,KAAK,CAAC;IACjC,OAAO,GAA4B,IAAI,GAAG,EAAE,CAAC;IAC7C,MAAM,CAAa;IACnB,QAAQ,GAAkC,IAAI,GAAG,EAAE,CAAC;IACpD,QAAQ,GAAqB,EAAE,CAAC;IAChC,KAAK,GAAoB,EAAE,CAAC;IAC5B,UAAU,CAAkB;IAC5B,iBAAiB,GAAW,CAAC,CAAC;IAEtC;;;;;;;MAOE;IACF,YAAmB,IAAiB,EAAE,SAAwB,EAAE;QAC9D,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,MAAM,GAAG,IAAI,gBAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;QACnC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;gBAClC,UAAU,EAAE,MAAM,CAAC,UAAU;gBAC7B,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,CAAC;gBAC1C,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,KAAK;gBAC9C,mBAAmB,EAAE,EAAE;gBACvB,SAAS,EAAE,MAAM,CAAC,SAAS,IAAI,KAAK;gBACpC,SAAS,EAAE,MAAM,CAAC,SAAS,IAAI,KAAK;gBACpC,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE;gBACzB,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;gBACZ,YAAY,EAAE,SAAS;aACxB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;MAUE;IACK,KAAK,CAAC,IAAI,CAAC,UAAkB,MAAM;QACxC,IAAI,CAAC,EAAE,CAAC,oBAAQ,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC;QAED,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;MAOE;IACK,KAAK,CAAC,KAAK;QAChB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IACtD,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,OAAe;QACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;QAEnD,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,EAAE,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YAChD,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;YACxC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,KAAK;QACjB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvC,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEnD,MAAM,CAAC,GAAG,IAAA,cAAI,EAAC,QAAQ,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,IAAI,CAAC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;YACtD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,QAAQ,EAAE;YACpC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,MAAM,EAAE,OAAO;gBACf,cAAc,EAAE,mCAAmC;aACpD;YACD,IAAI,EAAE,IAAI,eAAe,CAAC;gBACxB,QAAQ,EAAE,IAAI,CAAC,KAAK;gBACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,EAAE;aACjB,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;YACxD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,eAAe,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,IAAI,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,KAAK,EAAE;YAChD,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,mCAAmC;aACpD;YACD,IAAI,EAAE,IAAI,eAAe,CAAC;gBACxB,UAAU,EAAE,oBAAoB;gBAChC,SAAS,EAAE,SAAS;gBACpB,IAAI;gBACJ,YAAY,EAAE,6BAA6B;aAC5C,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YACzD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAClC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,KAAK,CAAC,YAAY;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,4CAA4C,CAAC,CAAC;YAC5D,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,KAAK,EAAE;gBAChD,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,mCAAmC;iBACpD;gBACD,IAAI,EAAE,IAAI,eAAe,CAAC;oBACxB,UAAU,EAAE,eAAe;oBAC3B,SAAS,EAAE,SAAS;oBACpB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;iBACvC,CAAC;aACH,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,CAAC,4BAA4B,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;gBACjE,OAAO,KAAK,CAAC;YACf,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAClC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;YAEnE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACnD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,CAAC,4BAA4B,GAAG,EAAE,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAEO,QAAQ,CAAC,OAAe,EAAE,MAAmB;QACnD,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,KAAK;QACX,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAE7C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,aAAa,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;YAC7C,aAAa,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;YAC7C,aAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACxC,aAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACxC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI;YAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;IACzD,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,OAAe;QAC5C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,MAAM,GAAG,IAAI,cAAS,CAAC,yBAAa,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,EAAE;YACnE,OAAO,EAAE;gBACP,MAAM,EAAE,yBAAa,CAAC,MAAM;gBAC5B,IAAI,EAAE,kBAAkB;aACzB;YACD,OAAO;SACR,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACvD,MAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAE1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,KAAK;oBAAE,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,+CACE,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,EACjC,uBAAuB,IAAI,CAAC,iBAAiB,GAAG,CAAC,QAAQ,CAC1D,CAAC;gBACF,UAAU,CACR,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EACpC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAChC,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAY,EAAE,MAAc,EAAE,EAAE;YACvD,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;gBAClB,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,gDACE,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,EACjC,uBAAuB,IAAI,CAAC,iBAAiB,GAAG,CAAC,QAAQ,CAC1D,CAAC;oBACF,UAAU,CACR,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EACpC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAChC,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CAAC;gBACtE,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,qBAAqB,MAAM,EAAE,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,CAAC;gBACH,MAAM,OAAO,GAAqB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAE9D,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI;oBAAE,OAAO;gBAElC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAElE,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;oBAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,oBAAoB,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;gBACxE,CAAC;gBAED,IAAI,OAAO,CAAC,IAAI,KAAK,gBAAgB,EAAE,CAAC;oBACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;oBAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;gBACpE,CAAC;gBAED,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;oBAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBAE9C,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,OAAO,IAAI,CAAC,QAAQ,CAClB,qDAAqD,OAAO,CAAC,EAAE,GAAG,CACnE,CAAC;oBACJ,CAAC;oBAED,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBAElD,IAAI,CAAC,MAAM,EAAE,CAAC;wBACZ,OAAO,IAAI,CAAC,QAAQ,CAClB,oDAAoD,OAAO,CAAC,UAAU,GAAG,CAC1E,CAAC;oBACJ,CAAC;oBAED,IAAI,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;wBACrC,MAAM,KAAK,GAAW,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBACxD,MAAM,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAClC,iDAAiD,CAClD,CAAC;wBACF,IAAI,gBAAgB,EAAE,CAAC;4BACrB,MAAM,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;4BAC1C,8CAA8C;4BAE9C,IAAI,MAAM,KAAK,wBAAwB,EAAE,CAAC;gCACxC,IAAI,CAAC,QAAQ,CAAC,qCAAqC,EAAE,MAAM,CAAC,CAAC;gCAC7D,IAAI,CAAC,KAAK,EAAE,CAAC;gCACb,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,uDAAuD,CACxD,CAAC;gCACF,UAAU,CAAC,GAAG,EAAE;oCACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;gCACjC,CAAC,EAAE,MAAM,CAAC,CAAC;4BACb,CAAC;wBACH,CAAC;wBAED,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;oBAClE,CAAC;oBAED,IAAI,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;wBAC5C,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;oBAC/C,CAAC;yBAAM,IAAI,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;wBAChD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;oBAC3C,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,6BAA6B,GAAG,EAAE,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,OAAe;QACjD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAE1D,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC,QAAQ,CAClB,oDAAoD,CACrD,CAAC;QACJ,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAE,iCAAqB,CAAC,IAAI;gBAChC,OAAO,EAAE;oBACP,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;iBACtC;aACF,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;gBACjC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,CACX,4DAA4D,CAC7D,CAAC;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAC7B,GAAW,EACX,MAAmB;QAEnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,iDAAiD,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;YACpE,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,GAAG,EAAE;gBAC9C,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;oBAClC,aAAa,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;iBACnE;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnB,aAAa,EAAE,KAAK;oBACpB,SAAS,EAAE;wBACT,GAAG;wBACH,MAAM;qBACP;oBACD,KAAK,EACH,6wPAA6wP;iBAChxP,CAAC;aACH,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,IAAI,CAAC,QAAQ,CAAC,kCAAkC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;gBACvE,OAAO,IAAI,CAAC;YACd,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC;QAC5D,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,CAAC,kCAAkC,GAAG,EAAE,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAEO,kBAAkB,CAAC,OAAyB,EAAE,MAAkB;QACtE,wGAAwG;QACxG,MAAM,YAAY,GAAG,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC;QAEjE,IAAI,MAAM,CAAC,YAAY,KAAK,YAAY;YAAE,OAAO;QAEjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;YAClC,GAAG,MAAM;YACT,YAAY;SACb,CAAC,CAAC;QAEH,IAAI,YAAY,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;QAElE,IAAI,YAAY,KAAK,WAAW,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,MAAM,CAAC,UAAU,4BAA4B,CAAC,CAAC;YAC1E,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAEO,sBAAsB,CAC5B,OAAyB,EACzB,MAAkB;QAElB,MAAM,WAAW,GACf,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO;YAC9C,EAAE,KAAK,CAAC,IAAI,CAAC;aACZ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;QAEnC,IAAI,WAAW,EAAE,MAAM,GAAG,CAAC;YAAE,OAAO;QAEpC,WAAW,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAC/B,0DAA0D,CAC3D,CAAC;YACF,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAEtB,MAAM,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEtC,MAAM,GAAG,GAAW,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAC7C,IAAI,CAAC,GAAG;gBAAE,OAAO;YAEjB;;cAEE;YAEF,mCAAmC;YACnC,IACE,GAAG,CAAC,QAAQ,CAAC,oBAAoB,CAAC;gBAClC,GAAG,CAAC,UAAU,CAAC,oCAAoC,CAAC;gBACpD,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EACjC,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBAClC,GAAG,MAAM;oBACT,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;oBAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;wBAClC,GAAG,MAAM;wBACT,KAAK,EAAE,MAAM,CAAC,KAAK;qBACpB,CAAC,CAAC;gBACL,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;oBACpC,MAAM;oBACN,KAAK,EAAE,oBAAoB;oBAC3B,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC;YAED,yCAAyC;YACzC,IACE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,CAAC;gBAC3C,GAAG,CAAC,UAAU,CAAC,oCAAoC,CAAC;gBACpD,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC9B,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBAClC,GAAG,MAAM;oBACT,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC;oBACxD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;wBAClC,GAAG,MAAM;wBACT,KAAK,EAAE,MAAM,CAAC,KAAK;qBACpB,CAAC,CAAC;gBACL,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;oBACpC,MAAM;oBACN,KAAK,EAAE,0BAA0B;oBACjC,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC;YAED,QAAQ;YACR,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACzC,IAAI,UAAU,IAAI,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;gBAClD,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC/D,OAAO,CAAC,KAAK,EAAE,CAAC;gBAEhB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC5C,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAEpE,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;oBACrC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;wBACrB,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;oBACpD,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;wBACnB,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;oBAClD,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;oBACtC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC/B,CAAC;gBAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBAClC,GAAG,CAAC;oBACJ,OAAO;iBACR,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,gBAAgB,EAAE;oBACnC,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,IAAI;iBACL,CAAC,CAAC;gBAEH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;YAClE,CAAC;YAED,qBAAqB;YACrB,MAAM,cAAc,GAAG;gBACrB,GAAG,GAAG,CAAC,QAAQ,CACb,mFAAmF,CACpF;aACF,CAAC;YACF,IAAI,cAAc,EAAE,MAAM,EAAE,CAAC;gBAC3B,MAAM,UAAU,GAAG,EAAE,CAAC;gBAEtB,KAAK,MAAM,KAAK,IAAI,cAAc,EAAE,CAAC;oBACnC,UAAU,CAAC,IAAI,CAAC;wBACd,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;wBACjC,WAAW,EAAE;4BACX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACpB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACpB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;yBACrB;wBACD,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;qBAC9B,CAAC,CAAC;gBACL,CAAC;gBAED,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;oBAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC,EAAE,CAAC;wBACjE,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,aAAa,EAAE;4BAChC,MAAM;4BACN,SAAS;yBACV,CAAC,CAAC;wBAEH,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CACvB,CAAC;oBACJ,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;oBAC/B,IAAI,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;wBAAE,OAAO;oBAErE,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBAErD,IAAI,SAAS,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;wBACjC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;4BAC7B,MAAM;4BACN,KAAK,EAAE,eAAe;4BACtB,OAAO,EAAE,KAAK;yBACf,CAAC,CAAC;oBACL,CAAC;yBAAM,IAAI,SAAS,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;wBACxC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;4BAC7B,MAAM;4BACN,KAAK,EAAE,SAAS;4BAChB,OAAO,EAAE,KAAK;yBACf,CAAC,CAAC;oBACL,CAAC;oBAED,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,iBAAiB,EAAE;wBACpC,MAAM;wBACN,SAAS,EAAE,SAAS,CAAC,SAAS;wBAC9B,WAAW,EAAE,SAAS,CAAC,WAAW;wBAClC,KAAK,EAAE,SAAS,CAAC,KAAK;qBACvB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBACzC,GAAG,MAAM;oBACT,mBAAmB,EAAE,MAAM,CAAC,mBAAmB;iBAChD,CAAC,CAAC;YACL,CAAC;YAED,qCAAqC;YACrC,MAAM,cAAc,GAAG,GAAG,CAAC,KAAK,CAC9B,4CAA4C,CAC7C,CAAC;YACF,IAAI,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACvE,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAElC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,gBAAgB,EAAE;oBACnC,MAAM;oBACN,OAAO;iBACR,CAAC,CAAC;gBAEH,2DAA2D;gBAC3D,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,OAAO,KAAK,OAAO;oBACvB,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU;oBACpC,CAAC,GAAG,CAAC,SAAS,CACjB,CAAC;gBACF,IAAI,cAAc,EAAE,CAAC;oBACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,OAAO,uBAAuB,CAAC,CAAC;oBAC9D,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC;oBAE1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CACxC,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAC/C,CAAC;oBAEF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,OAAO,2BAA2B,CAAC,CAAC;oBAElE,OAAO;gBACT,CAAC;YACH,CAAC;YAED,+BAA+B;YAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU;gBACpC,GAAG,CAAC,SAAS,KAAK,cAAc,CACnC,CAAC;YACF,IAAI,cAAc,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;gBAClD,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,+BAA+B,cAAc,CAAC,OAAO,EAAE,CACxD,CAAC;gBAEF,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC5B,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAErC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,CAAC,GAAG,EAAE,EAAE,CACN,CAAC,CACC,GAAG,CAAC,OAAO,KAAK,cAAc,CAAC,OAAO;oBACtC,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC,UAAU;oBAC5C,GAAG,CAAC,SAAS,KAAK,cAAc,CAAC,SAAS,CAC3C,CACJ,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,GAAG,SAAS,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;YAExE,oBAAoB;YACpB,IAAI,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC;gBACpC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,GAAG;qBACzB,KAAK,CAAC,iBAAiB,CAAC;qBACxB,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAE5B,MAAM,UAAU,GAAG,gBAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBACrD,MAAM,UAAU,GAAG,gBAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAErD,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;oBAC7B,MAAM;oBACN,MAAM,EAAE,UAAU;oBAClB,MAAM,EAAE,UAAU;iBACnB,CAAC,CAAC;YACL,CAAC;YAED,6BAA6B;YAC7B,MAAM,mBAAmB,GAAG,GAAG,CAAC,KAAK,CACnC,8FAA8F,CAC/F,CAAC;YACF,IAAI,mBAAmB,EAAE,CAAC;gBACxB,MAAM,GAAG,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,OAAO,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,OAAO,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAEvC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,kBAAkB,EAAE;oBACrC,MAAM;oBACN,GAAG;oBACH,OAAO;oBACP,OAAO;iBACR,CAAC,CAAC;YACL,CAAC;YAED,mBAAmB;YACnB,MAAM,cAAc,GAAG,GAAG,CAAC,KAAK,CAC9B,oDAAoD,CACrD,CAAC;YACF,IAAI,cAAc,EAAE,CAAC;gBACnB,MAAM,cAAc,GAAG;oBACrB,aAAa,EAAE,MAAM;oBACrB,eAAe,EAAE,QAAQ;oBACzB,cAAc,EAAE,OAAO;iBACxB,CAAC;gBAEF,MAAM,IAAI,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,CAAc,CAAC;gBAEzC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,SAAS,EAAE;oBAC5B,MAAM;oBACN,IAAI;oBACJ,GAAG;oBACH,OAAO,EAAE,GAAgB;iBAC1B,CAAC,CAAC;YACL,CAAC;YAED,IAAI,GAAG,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE,CAAC;gBAC3C,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpD,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;YACrD,CAAC;YAED,uBAAuB;YACvB,IAAI,GAAG,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE,CAAC;gBAC3C,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpD,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;YACrD,CAAC;YAED,yBAAyB;YACzB,IAAI,GAAG,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE,CAAC;gBACzC,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAE1D,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;YACjE,CAAC;YAED,0BAA0B;YAC1B,MAAM,oBAAoB,GAAG,GAAG,CAAC,KAAK,CACpC,6CAA6C,CAC9C,CAAC;YAEF,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpD,MAAM,IAAI,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACxD,CAAC;YAED,4BAA4B;YAC5B,MAAM,sBAAsB,GAAG,GAAG,CAAC,KAAK,CACtC,6CAA6C,CAC9C,CAAC;YAEF,IAAI,sBAAsB,IAAI,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxD,MAAM,IAAI,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACxD,CAAC;YAED,wBAAwB;YACxB,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CACzB,2FAA2F,CAC5F,CAAC;YACF,IAAI,SAAS,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACvC,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAE1B,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3D,CAAC;YAED,mBAAmB;YACnB,MAAM,cAAc,GAAG,GAAG,CAAC,KAAK,CAC9B,4DAA4D,CAC7D,CAAC;YACF,IAAI,cAAc,EAAE,CAAC;gBACnB,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,MAAM,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAE/B,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACjE,CAAC;YAED,kBAAkB;YAClB,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CACzB,qGAAqG,CACtG,CAAC;YACF,IAAI,SAAS,EAAE,CAAC;gBACd,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAChC,MAAM,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEvD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,KAAK,UAAU,EAAE,CAAC;oBACvD,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,QAAQ,EAAE;wBAC3B,MAAM;wBACN,GAAG;wBACH,UAAU;wBACV,UAAU;qBACX,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED,oBAAoB;YACpB,MAAM,eAAe,GAAG,GAAG,CAAC,KAAK,CAC/B,4CAA4C,CAC7C,CAAC;YACF,IAAI,eAAe,EAAE,CAAC;gBACpB,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEtC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;YACxD,CAAC;YAED,kBAAkB;YAClB,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAC7B,0DAA0D,CAC3D,CAAC;YACF,IAAI,aAAa,EAAE,CAAC;gBAClB,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3D,CAAC;YAED,mBAAmB;YACnB,MAAM,cAAc,GAAG,GAAG,CAAC,KAAK,CAC9B,wDAAwD,CACzD,CAAC;YAEF,IAAI,cAAc,EAAE,CAAC;gBACnB,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;YAC5D,CAAC;YAED,kBAAkB;YAClB,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACjE,IAAI,aAAa,EAAE,CAAC;gBAClB,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAE7B,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACrD,CAAC;YAED,iBAAiB;YACjB,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAC5B,8DAA8D,CAC/D,CAAC;YACF,IAAI,YAAY,EAAE,CAAC;gBACjB,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC9B,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAE5B,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAC3D,CAAC;YAED,4BAA4B;YAC5B,MAAM,sBAAsB,GAAG,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YACpE,IAAI,sBAAsB,EAAE,CAAC;gBAC3B,MAAM,KAAK,GAAG,sBAAsB,CAAC,CAAC,CAKtB,CAAC;gBAEjB,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3D,CAAC;YAED,0BAA0B;YAC1B,IAAI,GAAG,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;YAClD,CAAC;YAED,oBAAoB;YACpB,IAAI,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC9B,KAAK,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,kBAAM,CAAC,EAAE,CAAC;oBACpD,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;wBACtB,IAAI,CAAC,IAAI,CAAC,oBAAQ,CAAC,UAAU,EAAE;4BAC7B,MAAM;4BACN,KAAK,EAAE,OAAO,CAAC,IAAW;4BAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;yBACzB,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,eAAe,CAC3B,MAAmB,EACnB,QAAgB,EAChB,UAAkB;QAElB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,+CAA+C,CAAC,CAAC;YAC/D,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;YACpE,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;QAED,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,GAAG,EAAE;gBAC9C,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;oBAClC,aAAa,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;iBACnE;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnB,aAAa,EAAE,KAAK;oBACpB,SAAS,EAAE;wBACT,YAAY,EAAE,QAAQ;wBACtB,MAAM;qBACP;oBACD,KAAK,EACH,4GAA4G;iBAC/G,CAAC;aACH,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;gBAClE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,CACX,IAAI,UAAU,kCAAkC,QAAQ,CAAC,UAAU,EAAE,CACtE,CAAC;gBACF,OAAO,SAAS,CAAC;YACnB,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,IAAI,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,IAAI,UAAU,8BAA8B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CACrE,CAAC;gBACF,OAAO,SAAS,CAAC;YACnB,CAAC;YAED,MAAM,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,GAAa,CAAC;YAEtC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,sBAAsB,CAAC,CAAC;gBACvD,OAAO,SAAS,CAAC;YACnB,CAAC;YAED,OAAO,GAAG,CAAC;QACb,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,CAAC,IAAI,UAAU,kCAAkC,GAAG,EAAE,CAAC,CAAC;YACrE,OAAO,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;IAEO,mBAAmB,CAAC,MAAkB;QAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;YAClC,GAAG,MAAM;YACT,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,MAAM,CAAC,UAAU,iBAAiB,CAAC,CAAC;IAClE,CAAC;IAEO,iBAAiB,CAAC,MAAkB;QAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;YAClC,GAAG,MAAM;YACT,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,UAAU,oBAAoB,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,KAAK,CAAC,YAAY;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;gBACjB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CACtC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CAC9C,CAAC;gBAEF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAC5B,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CAC9C,CAAC;gBAEF,cAAc,CAAC,OAAO,CACpB,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE;oBACrD,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACrC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC;yBAC3C,IAAI,CAAC,OAAO,CAAC;yBACb,KAAK,CAAC,MAAM,CAAC,CAAC;gBACnB,CAAC,CACF,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAC/B,MAAkB,EAClB,OAAe,EACf,QAAiB;QAEjB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,0CAA0C,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,kDAAkD,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;YACpE,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,OAAO,QAAQ,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;QAE1E,MAAM,OAAO,GAAG;YACd,aAAa,EAAE,oBAAoB;YACnC,SAAS,EAAE;gBACT,GAAG,EAAE,MAAM,CAAC,YAAY;gBACxB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,OAAO,EAAE,OAAO;aACjB;YACD,KAAK,EACH,8LAA8L;SACjM,CAAC;QAEF,IAAI,QAAQ,EAAE,CAAC;YACb,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,OAAO;oBACP,OAAO;oBACP,MAAM;oBACN,OAAO,EAAE,SAAS;iBACnB,CAAC,CAAC;gBAEH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,OAAO,mBAAmB,CAAC,CAAC;gBAE1D,IAAI,CAAC;oBACH,KAAK,CAAC,yBAAa,CAAC,GAAG,EAAE;wBACvB,MAAM,EAAE,MAAM;wBACd,OAAO,EAAE;4BACP,cAAc,EAAE,kBAAkB;4BAClC,aAAa,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;yBACnE;wBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;qBAC9B,CAAC;yBACC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;4BACZ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;4BACxD,IAAI,CAAC,QAAQ,CACX,2BAA2B,GAAG,CAAC,UAAU,EAAE,EAC3C,MAAM,CACP,CAAC;4BACF,OAAO,IAAI,CAAC;wBACd,CAAC;wBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,OAAO,sBAAsB,CAAC,CAAC;wBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,OAAO,GAAG,CAAC,CAAC;wBAE/D,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC5B,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,OAAO,KAAK,OAAO;4BACvB,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CACvC,CAAC;wBAEF,IAAI,GAAG,EAAE,CAAC;4BACR,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;gCAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,OAAO,KAAK,OAAO;oCACvB,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CACvC,CAAC;gCACF,OAAO,CAAC,SAAS,CAAC,CAAC;4BACrB,CAAC,EAAE,KAAK,CAAC,CAAC;wBACZ,CAAC;oBACH,CAAC,CAAC;yBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,OAAO,KAAK,OAAO;4BACvB,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CACvC,CAAC;wBACF,MAAM,CAAC,GAAG,CAAC,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,OAAO,KAAK,OAAO,IAAI,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CAClE,CAAC;oBACF,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,IAAI,CAAC;gBACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yBAAa,CAAC,GAAG,EAAE;oBAC9C,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE;wBACP,cAAc,EAAE,kBAAkB;wBAClC,aAAa,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;qBACnE;oBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;iBAC9B,CAAC,CAAC;gBAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,QAAQ,CACX,2BAA2B,QAAQ,CAAC,UAAU,EAAE,EAChD,MAAM,CACP,CAAC;oBACF,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,OAAO,sBAAsB,CAAC,CAAC;gBAC7D,OAAO,SAAS,CAAC;YACnB,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,2BAA2B,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;;;;;;;;;MAYE;IACK,KAAK,CAAC,WAAW,CACtB,UAAkB,EAClB,OAAe,EACf,WAAoB,KAAK;QAEzB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAE1C,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CACX,IAAI,UAAU,oDAAoD,UAAU,EAAE,CAC/E,CAAC;gBACF,OAAO,IAAI,CAAC;YACd,CAAC;YAED,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,IAAI,UAAU,oDAAoD,CACnE,CAAC;gBACF,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;qBAChD,IAAI,CAAC,OAAO,CAAC;qBACb,KAAK,CAAC,MAAM,CAAC,CAAC;YACnB,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,IAAI,UAAU,oDAAoD,CACnE,CAAC;gBACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;MAUE;IACK,KAAK,CAAC,SAAS,CAAC,IAAmB;QACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,kBAAkB,CAAC,CAAC;QAEzD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CACpC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,CAChB,CAAC;QACF,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,IAAI,CAAC,QAAQ,CACX,IAAI,IAAI,CAAC,UAAU,6CAA6C,CACjE,CAAC;YACF,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,IAAI,CAAC,UAAU,KAAK,YAAY,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CACX,IAAI,IAAI,CAAC,UAAU,iDAAiD,CACrE,CAAC;YACF,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,YAAY,KAAK,WAAW,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,kCAAkC,CAAC,CAAC;YACxE,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;gBAChC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,GAAG;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,CAAC;gBACxC,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE;gBACvB,KAAK,EAAE,EAAE;gBACT,sBAAsB,EAAE,IAAI,CAAC,cAAc;oBACzC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBAC7C,CAAC,EAAE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;oBAClC,CAAC,CAAC,SAAS;gBACb,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,KAAK;gBAC5C,sBAAsB,EAAE,IAAI,CAAC,cAAc;oBACzC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;oBAC1D,CAAC,EAAE,MAAM,CAAC;oBACZ,CAAC,CAAC,SAAS;gBACb,mBAAmB,EAAE,EAAE;gBACvB,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,KAAK;gBAClC,iBAAiB,EAAE,IAAI,CAAC,SAAS;oBAC/B,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,WAAW,CACd,IAAI,CAAC,UAAU,EACf,yCAAyC,CAC1C,CAAC;oBACJ,CAAC,EAAE,MAAM,CAAC;oBACZ,CAAC,CAAC,SAAS;gBACb,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,KAAK;gBAClC,iBAAiB,EAAE,IAAI,CAAC,SAAS;oBAC/B,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,WAAW,CACd,IAAI,CAAC,UAAU,EACf,gCAAgC,CACjC,CAAC;oBACJ,CAAC,EAAE,MAAM,CAAC;oBACZ,CAAC,CAAC,SAAS;gBACb,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,KAAK;gBACZ,YAAY,EAAE,YAAY;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;gBACjC,GAAG;gBACH,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAE,iCAAqB,CAAC,KAAK;gBACjC,OAAO,EAAE;oBACP,SAAS,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;oBACvC,UAAU,EAAE,EAAE;oBACd,aAAa,EAAE,iBAAiB;oBAChC,KAAK,EAAE;;;;;;YAMP;iBACD;gBACD,EAAE,EAAE,IAAI,CAAC,UAAU;aACpB,CAAC,EACF,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,GAAG,EAAE,CAAC;oBACR,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,2BAA2B,GAAG,EAAE,CAAC,CAAC;oBACnE,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAE,iCAAqB,CAAC,KAAK;oBACjC,OAAO,EAAE;wBACP,SAAS,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;wBACvC,UAAU,EAAE,EAAE;wBACd,aAAa,EAAE,cAAc;wBAC7B,KAAK,EACH,sjBAAsjB;qBACzjB;oBACD,EAAE,EAAE,IAAI,CAAC,UAAU;iBACpB,CAAC,EACF,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,GAAG,EAAE,CAAC;wBACR,IAAI,CAAC,QAAQ,CACX,IAAI,IAAI,CAAC,UAAU,2BAA2B,GAAG,EAAE,CACpD,CAAC;wBACF,OAAO,KAAK,CAAC;oBACf,CAAC;gBACH,CAAC,CACF,CAAC;gBAEF,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBAC7C,CAAC;gBAED,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;oBAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1D,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,IAAI,IAAI,CAAC,UAAU,yEAAyE,CAC7F,CAAC;YACF,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAEO,iBAAiB,CACvB,OAAiB,EACjB,OAAiB;QAKjB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/D,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAE7D,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED;;;;;;;;MAQE;IACK,SAAS,CAAC,UAAkB;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;;;MASE;IACK,YAAY,CAAC,UAAkB;QACpC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,sBAAsB,CAAC,CAAC;QAClE,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,sBAAsB,CAAC,CAAC;QAClE,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7D,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,OAAO;YAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,UAAU,6BAA6B,CAAC,CAAC;IACvE,CAAC;IAED;;;;;;;;;;MAUE;IACK,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEO,KAAK,CAAC,KAAK,CAAC,EAAU;QAC5B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;CACF;AA76CD,6BA66CC","sourcesContent":["import {\r\n  AuthOptions,\r\n  Auth,\r\n  RustServer,\r\n  WebsocketRequest,\r\n  WebsocketMessage,\r\n  ServerOptions,\r\n  LoggerOptions,\r\n} from \"../types\";\r\nimport {\r\n  GPORTALRoutes,\r\n  GPORTALWebsocketTypes,\r\n  RCEEvent,\r\n  QuickChat,\r\n  EVENTS,\r\n} from \"../constants\";\r\nimport { WebSocket } from \"ws\";\r\nimport Logger from \"./Logger\";\r\nimport { RCEEvents } from \"../types\";\r\nimport Helper from \"./Helper\";\r\nimport { load } from \"cheerio\";\r\n\r\ninterface QueuedCommand {\r\n  identifier: string;\r\n  command: string;\r\n  response: boolean;\r\n  resolve: (value?: string | undefined | null) => void;\r\n  reject: (reason?: any) => void;\r\n}\r\n\r\ninterface CommandRequest {\r\n  identifier: string;\r\n  command: string;\r\n  timestamp?: string;\r\n  resolve: (value?: string) => void;\r\n  reject: (reason?: any) => void;\r\n  timeout: ReturnType<typeof setTimeout>;\r\n}\r\n\r\nexport default class RCEManager extends RCEEvents {\r\n  private email: string;\r\n  private password: string;\r\n  private logger: Logger;\r\n  private auth?: Auth = {\r\n    refresh_token: \"\",\r\n    access_token: \"\",\r\n    token_type: \"Bearer\",\r\n    expires_in: 0,\r\n  };\r\n  private tokenRefreshing: boolean = false;\r\n  private servers: Map<string, RustServer> = new Map();\r\n  private socket?: WebSocket;\r\n  private requests: Map<string, WebsocketRequest> = new Map();\r\n  private commands: CommandRequest[] = [];\r\n  private queue: QueuedCommand[] = [];\r\n  private kaInterval?: NodeJS.Timeout;\r\n  private connectionAttempt: number = 0;\r\n\r\n  /*\r\n    * Create a new RCEManager instance\r\n\r\n    * @param {AuthOptions} auth - The authentication options\r\n    * @memberof RCEManager\r\n    * @example\r\n    * const rce = new RCEManager({ email: \"\", password: \"\", servers: [{ identifier: \"server1\", region: \"US\", serverId: 12345 }] }, { logLevel: LogLevel.Info });\r\n  */\r\n  public constructor(auth: AuthOptions, logger: LoggerOptions = {}) {\r\n    super();\r\n\r\n    this.logger = new Logger(this, logger);\r\n\r\n    this.email = auth.email;\r\n    this.password = auth.password;\r\n\r\n    const servers = auth.servers || [];\r\n    servers.forEach((server) => {\r\n      this.servers.set(server.identifier, {\r\n        identifier: server.identifier,\r\n        serverId: server.serverId,\r\n        region: server.region,\r\n        refreshPlayers: server.refreshPlayers || 0,\r\n        rfBroadcasting: server.rfBroadcasting || false,\r\n        currentRfBroadcasts: [],\r\n        heliFeeds: server.heliFeeds || false,\r\n        bradFeeds: server.bradFeeds || false,\r\n        state: server.state || [],\r\n        flags: [],\r\n        players: [],\r\n        added: false,\r\n        ready: false,\r\n        serviceState: \"UNKNOWN\",\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n    * Login to GPORTAL and establish a websocket connection\r\n\r\n    * @param {number} [timeout=60_000] - The timeout for the websocket connection\r\n    * @returns {Promise<void>}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * await rce.init();\r\n    * @example\r\n    * await rce.init(30_000);\r\n  */\r\n  public async init(timeout: number = 60_000) {\r\n    this.on(RCEEvent.Error, (payload) => {\r\n      this.logger.error(payload.error);\r\n    });\r\n\r\n    const login = await this.login();\r\n    if (!login) {\r\n      throw new Error(\"Failed To Login\");\r\n    }\r\n\r\n    await this.authenticate(timeout);\r\n  }\r\n\r\n  /*\r\n    * Close the RCEManager and clear all intervals\r\n\r\n    * @returns {Promise<void>}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * await rce.close();\r\n  */\r\n  public async close() {\r\n    this.clean();\r\n    this.logger.info(\"RCEManager Closed Successfully!\");\r\n  }\r\n\r\n  private async authenticate(timeout: number) {\r\n    this.logger.debug(\"Attempting To Authenticate...\");\r\n\r\n    const s = await this.refreshToken();\r\n    if (s) {\r\n      this.logger.info(\"Successfully Authenticated!\");\r\n      await this.connectWebsocket(timeout);\r\n    } else {\r\n      this.logError(\"Failed to authenticate\");\r\n      setTimeout(() => this.authenticate(timeout), 60_000);\r\n    }\r\n  }\r\n\r\n  private async login(): Promise<boolean> {\r\n    const loginRes = await fetch(GPORTALRoutes.Login);\r\n    const loginRaw = await loginRes.text();\r\n    const cookies = loginRes.headers.get(\"set-cookie\");\r\n\r\n    const $ = load(loginRaw);\r\n    const loginUrl = $(\"#kc-form-login\").attr(\"action\");\r\n\r\n    if (!loginUrl) {\r\n      this.logError(\"Failed To Login: No Login URL Found!\");\r\n      return false;\r\n    }\r\n\r\n    const postRes = await fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Cookie: cookies,\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: new URLSearchParams({\r\n        username: this.email,\r\n        password: this.password,\r\n        credentialId: \"\",\r\n      }),\r\n    });\r\n\r\n    if (!postRes.ok) {\r\n      this.logger.debug(`Failed To Login: ${postRes.status}`);\r\n      this.logError(`Failed To Login: ${postRes.statusText}`);\r\n      return false;\r\n    }\r\n\r\n    const code = new URLSearchParams(new URL(postRes.url).search).get(\"code\");\r\n    if (!code) {\r\n      this.logError(\"Failed To Login: No Code Found!\");\r\n      return false;\r\n    }\r\n\r\n    const tokenRes = await fetch(GPORTALRoutes.Token, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: new URLSearchParams({\r\n        grant_type: \"authorization_code\",\r\n        client_id: \"website\",\r\n        code,\r\n        redirect_uri: \"https://www.g-portal.com/en\",\r\n      }),\r\n    });\r\n\r\n    if (!tokenRes.ok) {\r\n      this.logger.debug(`Failed To Login: ${tokenRes.status}`);\r\n      this.logError(`Failed To Login: ${tokenRes.statusText}`);\r\n      return false;\r\n    }\r\n\r\n    this.auth = await tokenRes.json();\r\n    setTimeout(() => this.refreshToken(), this.auth.expires_in * 1000);\r\n    return true;\r\n  }\r\n\r\n  private async refreshToken() {\r\n    this.tokenRefreshing = true;\r\n    this.logger.debug(\"Attempting To Refresh Token...\");\r\n\r\n    if (!this.auth?.refresh_token) {\r\n      this.logError(\"Failed To Refresh Token: No Refresh Token!\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(GPORTALRoutes.Token, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: \"refresh_token\",\r\n          client_id: \"website\",\r\n          refresh_token: this.auth.refresh_token,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        this.logger.debug(this.auth);\r\n        this.logger.debug(response.body);\r\n        this.logError(`Failed To Refresh Token: ${response.statusText}`);\r\n        return false;\r\n      }\r\n\r\n      this.auth = await response.json();\r\n      setTimeout(() => this.refreshToken(), this.auth.expires_in * 1000);\r\n\r\n      this.logger.debug(\"Token Successfully Refreshed!\");\r\n      this.tokenRefreshing = false;\r\n      return true;\r\n    } catch (err) {\r\n      this.logError(`Failed To Refresh Token: ${err}`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private logError(message: string, server?: RustServer) {\r\n    this.emit(RCEEvent.Error, { server, error: message });\r\n  }\r\n\r\n  private clean() {\r\n    this.logger.debug(\"Cleaning Up All Data...\");\r\n\r\n    this.servers.forEach((server) => {\r\n      clearInterval(server.refreshPlayersInterval);\r\n      clearInterval(server.rfBroadcastingInterval);\r\n      clearInterval(server.bradFeedsInterval);\r\n      clearInterval(server.heliFeedsInterval);\r\n      server.players = [];\r\n      server.added = false;\r\n      server.ready = false;\r\n      server.trueServerId = undefined;\r\n    });\r\n\r\n    this.requests.clear();\r\n    this.commands = [];\r\n    this.queue = [];\r\n\r\n    if (this.socket?.OPEN) this.socket.close(1000);\r\n    this.socket = undefined;\r\n    clearInterval(this.kaInterval);\r\n\r\n    this.logger.debug(\"Cleaned Up All Data Successfully!\");\r\n  }\r\n\r\n  private async connectWebsocket(timeout: number) {\r\n    this.logger.debug(\"Connecting To Websocket...\");\r\n    this.connectionAttempt++;\r\n\r\n    this.socket = new WebSocket(GPORTALRoutes.WebSocket, [\"graphql-ws\"], {\r\n      headers: {\r\n        origin: GPORTALRoutes.Origin,\r\n        host: \"www.g-portal.com\",\r\n      },\r\n      timeout,\r\n    });\r\n\r\n    this.socket.on(\"open\", async () => {\r\n      this.logger.debug(\"Websocket Connection Established!\");\r\n      await this.authenticateWebsocket(timeout);\r\n\r\n      this.servers.forEach(async (server) => {\r\n        if (!server.added) await this.addServer(server);\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"error\", (err) => {\r\n      this.logError(`Websocket Error: ${err.message}`);\r\n      this.clean();\r\n\r\n      if (this.connectionAttempt < 5) {\r\n        this.logger.warn(\r\n          `Websocket Error: Attempting To Reconnect In ${\r\n            (this.connectionAttempt + 1) * 10\r\n          } Second(s) (Attempt ${this.connectionAttempt + 1} Of 5)`\r\n        );\r\n        setTimeout(\r\n          () => this.connectWebsocket(timeout),\r\n          this.connectionAttempt * 10_000\r\n        );\r\n      } else {\r\n        this.logError(\"Failed To Connect To Websocket: Too Many Attempts!\");\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"close\", (code: number, reason: string) => {\r\n      this.clean();\r\n\r\n      if (code !== 1000) {\r\n        if (this.connectionAttempt < 5) {\r\n          this.logger.warn(\r\n            `Websocket closed: Attempting To Reconnect In ${\r\n              (this.connectionAttempt + 1) * 10\r\n            } Second(s) (Attempt ${this.connectionAttempt + 1} Of 5)`\r\n          );\r\n          setTimeout(\r\n            () => this.connectWebsocket(timeout),\r\n            this.connectionAttempt * 10_000\r\n          );\r\n        } else {\r\n          this.logError(\"Failed To Connect To Websocket: Too Many Attempts!\");\r\n        }\r\n      } else {\r\n        this.logError(`Websocket Closed: ${reason}`);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"message\", (data) => {\r\n      try {\r\n        const message: WebsocketMessage = JSON.parse(data.toString());\r\n\r\n        if (message.type === \"ka\") return;\r\n\r\n        this.logger.debug(`Received Message: ${JSON.stringify(message)}`);\r\n\r\n        if (message.type === \"error\") {\r\n          return this.logError(`Websocket Error: ${message?.payload?.message}`);\r\n        }\r\n\r\n        if (message.type === \"connection_ack\") {\r\n          this.connectionAttempt = 0;\r\n          return this.logger.debug(\"Websocket Authenticated Successfully!\");\r\n        }\r\n\r\n        if (message.type === \"data\") {\r\n          const request = this.requests.get(message.id);\r\n\r\n          if (!request) {\r\n            return this.logError(\r\n              `Failed To Handle Message: No Request Found For ID ${message.id}!`\r\n            );\r\n          }\r\n\r\n          const server = this.getServer(request.identifier);\r\n\r\n          if (!server) {\r\n            return this.logError(\r\n              `Failed To Handle Message: No Server Found For ID ${request.identifier}!`\r\n            );\r\n          }\r\n\r\n          if (message?.payload?.errors?.length) {\r\n            const error: string = message.payload.errors[0].message;\r\n            const aioRpcErrorMatch = error.match(\r\n              /status\\s*=\\s*([^\\n]+)\\s+details\\s*=\\s*\"([^\"]+)\"/\r\n            );\r\n            if (aioRpcErrorMatch) {\r\n              const status = aioRpcErrorMatch[1].trim();\r\n              // const details = aioRpcErrorMatch[2].trim();\r\n\r\n              if (status === \"StatusCode.UNAVAILABLE\") {\r\n                this.logError(\"AioRpcError: Server Is UUnavailable\", server);\r\n                this.clean();\r\n                this.logger.warn(\r\n                  \"AioRpcError: Will Attempt To Reconnect In 10 Seconds!\"\r\n                );\r\n                setTimeout(() => {\r\n                  this.connectWebsocket(timeout);\r\n                }, 10_000);\r\n              }\r\n            }\r\n\r\n            return this.logError(message.payload.errors[0].message, server);\r\n          }\r\n\r\n          if (message?.payload?.data?.consoleMessages) {\r\n            this.handleWebsocketMessage(message, server);\r\n          } else if (message?.payload?.data?.serviceState) {\r\n            this.handleServiceState(message, server);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        this.logError(`Failed To Handle Message: ${err}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async authenticateWebsocket(timeout: number) {\r\n    this.logger.debug(\"Attempting To Authenticate Websocket\");\r\n\r\n    if (!this.auth?.access_token) {\r\n      return this.logError(\r\n        \"Failed To Authenticate Websocket: No Access Token!\"\r\n      );\r\n    }\r\n\r\n    if (this.socket?.OPEN) {\r\n      this.socket.send(\r\n        JSON.stringify({\r\n          type: GPORTALWebsocketTypes.Init,\r\n          payload: {\r\n            authorization: this.auth.access_token,\r\n          },\r\n        })\r\n      );\r\n\r\n      this.kaInterval = setInterval(() => {\r\n        if (this.socket && this.socket.OPEN) {\r\n          this.logger.debug(\"Sending keep-alive Message\");\r\n          this.socket.send(JSON.stringify({ type: \"ka\" }));\r\n        }\r\n      }, 30_000);\r\n    } else {\r\n      this.logError(\r\n        \"Failed To Authenticate Websocket: No Websocket Connection!\"\r\n      );\r\n      this.clean();\r\n      this.connectWebsocket(timeout);\r\n    }\r\n  }\r\n\r\n  private async fetchServiceState(\r\n    sid: number,\r\n    region: \"US\" | \"EU\"\r\n  ): Promise<string | null> {\r\n    if (!this.auth?.access_token) {\r\n      this.logError(\"Failed To Fetch Service State: No Access Token!\");\r\n      return null;\r\n    }\r\n\r\n    if (this.tokenRefreshing) {\r\n      this.logger.warn(\"Token Is Refreshing, Retrying In A Few Seconds!\");\r\n      await this.sleep(3_000);\r\n      return this.fetchServiceState(sid, region);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(GPORTALRoutes.Api, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${this.auth.token_type} ${this.auth.access_token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          operationName: \"ctx\",\r\n          variables: {\r\n            sid,\r\n            region,\r\n          },\r\n          query:\r\n            \"query ctx($sid: Int!, $region: REGION!) {\\n  cfgContext(rsid: {id: $sid, region: $region}) {\\n    ns {\\n      ...CtxFields\\n      __typename\\n    }\\n    errors {\\n      mutator\\n      affectedPaths\\n      error {\\n        class_\\n        args\\n        __typename\\n      }\\n      scope\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment GameServerFields on GameServer {\\n  id\\n  serverName\\n  serverPort\\n  serverIp\\n  __typename\\n}\\n\\nfragment PermissionFields on Permission {\\n  userName\\n  created\\n  __typename\\n}\\n\\nfragment MysqlDbFields on CustomerMysqlDb {\\n  httpUrl\\n  host\\n  port\\n  database\\n  username\\n  password\\n  __typename\\n}\\n\\nfragment ServiceStateFields on ServiceState {\\n  state\\n  fsmState\\n  fsmIsTransitioning\\n  fsmIsExclusiveLocked\\n  fsmFileAccess\\n  fsmLastStateChange\\n  fsmStateLiveProgress {\\n    ... on InstallProgress {\\n      action\\n      percentage\\n      __typename\\n    }\\n    ... on BroadcastProgress {\\n      nextMessageAt\\n      stateExitAt\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment RestartTaskFields on RestartTask {\\n  id\\n  runOnWeekday\\n  runOnDayofmonth\\n  runAtTimeofday\\n  runInTimezone\\n  schedule\\n  data {\\n    description\\n    args\\n    scheduleExtended\\n    nextFireTime\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment DisplayPortFields on DisplayPorts {\\n  rconPort\\n  queryPort\\n  __typename\\n}\\n\\nfragment SteamWorkshopItemFields on SteamWorkshopItem {\\n  id\\n  appId\\n  itemType\\n  name\\n  links {\\n    websiteUrl\\n    __typename\\n  }\\n  summary\\n  logo {\\n    url\\n    __typename\\n  }\\n  maps {\\n    workshopId\\n    mapName\\n    __typename\\n  }\\n  dateCreated\\n  dateModified\\n  __typename\\n}\\n\\nfragment SevenDaysModFields on SevenDaysMod {\\n  id\\n  name\\n  repoKey\\n  active\\n  created\\n  modified\\n  __typename\\n}\\n\\nfragment MapParams on FarmingSimulatorMapParamsObject {\\n  serverIp\\n  webServerPort\\n  webStatsCode\\n  token\\n  __typename\\n}\\n\\nfragment CtxFields on RootNamespace {\\n  sys {\\n    game {\\n      name\\n      key\\n      platform\\n      forumBoardId\\n      supportedPlatforms\\n      __typename\\n    }\\n    extraGameTranslationKeys\\n    gameServer {\\n      ...GameServerFields\\n      __typename\\n    }\\n    permissionsOwner {\\n      ...PermissionFields\\n      __typename\\n    }\\n    permissions {\\n      ...PermissionFields\\n      __typename\\n    }\\n    mysqlDb {\\n      ...MysqlDbFields\\n      __typename\\n    }\\n    __typename\\n  }\\n  service {\\n    config {\\n      rsid {\\n        id\\n        region\\n        __typename\\n      }\\n      type\\n      hwId\\n      state\\n      ftpUser\\n      ftpPort\\n      ftpPassword\\n      ftpReadOnly\\n      ipAddress\\n      rconPort\\n      queryPort\\n      autoBackup\\n      dnsNames\\n      currentVersion\\n      targetVersion\\n      __typename\\n    }\\n    latestRev {\\n      id\\n      created\\n      __typename\\n    }\\n    maxSlots\\n    files\\n    memory {\\n      base\\n      effective\\n      __typename\\n    }\\n    currentState {\\n      ...ServiceStateFields\\n      __typename\\n    }\\n    backups {\\n      id\\n      userSize\\n      created\\n      isAutoBackup\\n      __typename\\n    }\\n    restartSchedule {\\n      ...RestartTaskFields\\n      __typename\\n    }\\n    dnsAvailableTlds\\n    __typename\\n  }\\n  admin {\\n    hardwareGuacamoleConnection {\\n      url\\n      __typename\\n    }\\n    __typename\\n  }\\n  profile {\\n    __typename\\n    ... on ProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      __typename\\n    }\\n    ... on MinecraftProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        rconPort\\n        queryPort\\n        additionalPorts\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      worlds\\n      addonRam\\n      isRamServer\\n      ramOrderCreationDate\\n      ramStopTimeUtc\\n      isConnectedToBungeecord\\n      bungeecordServerUrl\\n      executables {\\n        id\\n        name\\n        key\\n        default\\n        __typename\\n      }\\n      mods {\\n        id\\n        repoKey\\n        name\\n        image\\n        mindRam\\n        projectUrl\\n        revisions {\\n          id\\n          created\\n          executableId\\n          extraData\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    ... on CsgoProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        rconPort\\n        queryPort\\n        gotvPort\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      selectedWorkshopItems {\\n        ...SteamWorkshopItemFields\\n        __typename\\n      }\\n      installedMaps {\\n        name\\n        displayName\\n        workshopItem {\\n          ...SteamWorkshopItemFields\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    ... on ValheimProfileNamespace {\\n      name\\n      cfgFiles\\n      clientLink\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      __typename\\n    }\\n    ... on HellLetLooseProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        rconPort\\n        queryPort\\n        statsPort\\n        beaconPort\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      __typename\\n    }\\n    ... on SevenDaysToDieProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        rconPort\\n        queryPort\\n        telnetPort\\n        webDashboardPort\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      availableMods {\\n        ...SevenDaysModFields\\n        __typename\\n      }\\n      isModUpdateAvailable\\n      __typename\\n    }\\n    ... on SoulmaskProfileNamespace {\\n      name\\n      cfgFiles\\n      gameUid\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      __typename\\n    }\\n    ... on VRisingProfileNamespace {\\n      name\\n      cfgFiles\\n      isLaunchServer\\n      isOfficialServer\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      __typename\\n    }\\n    ... on RustConsoleProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      modifyActionHints\\n      __typename\\n    }\\n    ... on FarmingSimulatorProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      wiLink\\n      defaultModSpace\\n      masterWiLink\\n      displayPorts {\\n        rconPort\\n        queryPort\\n        webPort\\n        __typename\\n      }\\n      mapParams {\\n        ...MapParams\\n        __typename\\n      }\\n      __typename\\n    }\\n    ... on BungeecordProfileNamespace {\\n      name\\n      cfgFiles\\n      logFiles\\n      publicConfigs\\n      configDefinition\\n      displayPorts {\\n        ...DisplayPortFields\\n        __typename\\n      }\\n      enableCustomerDb\\n      enableCustomHostnames\\n      gpServers\\n      accessibleMinecraftServers {\\n        ...GameServerFields\\n        __typename\\n      }\\n      __typename\\n    }\\n  }\\n  __typename\\n}\",\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        this.logError(`Failed To Fetch Service State: ${response.statusText}`);\r\n        return null;\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.data.cfgContext.ns.service.currentState.state;\r\n    } catch (err) {\r\n      this.logError(`Failed To Fetch Service State: ${err}`);\r\n    }\r\n  }\r\n\r\n  private handleServiceState(message: WebsocketMessage, server: RustServer) {\r\n    // Possible states: \"STOPPING\", \"MAINTENANCE\", \"UPDATING\", \"STOPPED\", \"STARTING\", \"RUNNING\", \"SUSPENDED\"\r\n    const serviceState = message?.payload?.data?.serviceState?.state;\r\n\r\n    if (server.serviceState === serviceState) return;\r\n\r\n    this.servers.set(server.identifier, {\r\n      ...server,\r\n      serviceState,\r\n    });\r\n\r\n    if (serviceState === \"RUNNING\" && !server.ready) {\r\n      this.markServerAsReady(server);\r\n    }\r\n\r\n    if (serviceState === \"STOPPED\" && server.ready) {\r\n      this.markServerAsUnready(server);\r\n    }\r\n\r\n    this.emit(RCEEvent.ServiceState, { server, state: serviceState });\r\n\r\n    if (serviceState === \"SUSPENDED\") {\r\n      this.logger.warn(`Server ${server.identifier} Is Suspended! Removing...`);\r\n      this.removeServer(server.identifier);\r\n    }\r\n  }\r\n\r\n  private handleWebsocketMessage(\r\n    message: WebsocketMessage,\r\n    server: RustServer\r\n  ) {\r\n    const logMessages =\r\n      message?.payload?.data?.consoleMessages?.message\r\n        ?.split(\"\\n\")\r\n        .filter((e) => e !== \"\") || [];\r\n\r\n    if (logMessages?.length > 3) return;\r\n\r\n    logMessages?.forEach((logMessage) => {\r\n      const logMatch = logMessage.match(\r\n        /(\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}:\\d{2}):LOG:[^:]+: (.+)$/\r\n      );\r\n      if (!logMatch) return;\r\n\r\n      const logMessageDate = logMatch[1];\r\n      const logMessageContent = logMatch[2];\r\n\r\n      const log: string = logMessageContent.trim();\r\n      if (!log) return;\r\n\r\n      /*\r\n        The following events are \"refreshing\" events\r\n      */\r\n\r\n      // EVENT_START - Bradley APC Debris\r\n      if (\r\n        log.includes(\"servergibs_bradley\") &&\r\n        log.startsWith(\"realm ;entity ;group ;parent ;name\") &&\r\n        !server.flags.includes(\"bradley\")\r\n      ) {\r\n        server.flags.push(\"bradley\");\r\n        this.servers.set(server.identifier, {\r\n          ...server,\r\n          flags: server.flags,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          server.flags = server.flags.filter((f) => f !== \"bradley\");\r\n          this.servers.set(server.identifier, {\r\n            ...server,\r\n            flags: server.flags,\r\n          });\r\n        }, 360_000);\r\n\r\n        return this.emit(RCEEvent.EventStart, {\r\n          server,\r\n          event: \"Bradley APC Debris\",\r\n          special: true,\r\n        });\r\n      }\r\n\r\n      // EVENT_START - Patrol Helicopter Debris\r\n      if (\r\n        log.includes(\"servergibs_patrolhelicopter\") &&\r\n        log.startsWith(\"realm ;entity ;group ;parent ;name\") &&\r\n        !server.flags.includes(\"heli\")\r\n      ) {\r\n        server.flags.push(\"heli\");\r\n        this.servers.set(server.identifier, {\r\n          ...server,\r\n          flags: server.flags,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          server.flags = server.flags.filter((f) => f !== \"heli\");\r\n          this.servers.set(server.identifier, {\r\n            ...server,\r\n            flags: server.flags,\r\n          });\r\n        }, 360_000);\r\n\r\n        return this.emit(RCEEvent.EventStart, {\r\n          server,\r\n          event: \"Patrol Helicopter Debris\",\r\n          special: true,\r\n        });\r\n      }\r\n\r\n      // USERS\r\n      const usersMatch = log.match(/\"(.*?)\"/g);\r\n      if (usersMatch && log.startsWith('<slot:\"name\">')) {\r\n        const players = usersMatch.map((plr) => plr.replace(/\"/g, \"\"));\r\n        players.shift();\r\n\r\n        const s = this.getServer(server.identifier);\r\n        const { joined, left } = this.comparePopulation(s.players, players);\r\n\r\n        if (s.flags.includes(\"init-refresh\")) {\r\n          joined.forEach((ign) => {\r\n            this.emit(RCEEvent.PlayerJoined, { server, ign });\r\n          });\r\n\r\n          left.forEach((ign) => {\r\n            this.emit(RCEEvent.PlayerLeft, { server, ign });\r\n          });\r\n        }\r\n\r\n        if (!s.flags.includes(\"init-refresh\")) {\r\n          s.flags.push(\"init-refresh\");\r\n        }\r\n\r\n        this.servers.set(server.identifier, {\r\n          ...s,\r\n          players,\r\n        });\r\n\r\n        this.emit(RCEEvent.PlayerListUpdate, {\r\n          server,\r\n          players,\r\n          joined,\r\n          left,\r\n        });\r\n\r\n        this.logger.debug(`Refreshed Players For ${server.identifier}`);\r\n      }\r\n\r\n      // BROADCAST_RECEIVED\r\n      const broadcastMatch = [\r\n        ...log.matchAll(\r\n          /\\[(\\d+)\\sMHz\\]\\sPosition:\\s\\(([-\\d.]+),\\s([-\\d.]+),\\s([-\\d.]+)\\),\\sRange:\\s(\\d+)/g\r\n        ),\r\n      ];\r\n      if (broadcastMatch?.length) {\r\n        const broadcasts = [];\r\n\r\n        for (const match of broadcastMatch) {\r\n          broadcasts.push({\r\n            frequency: parseInt(match[1], 10),\r\n            coordinates: [\r\n              parseFloat(match[2]),\r\n              parseFloat(match[3]),\r\n              parseFloat(match[4]),\r\n            ],\r\n            range: parseInt(match[5], 10),\r\n          });\r\n        }\r\n\r\n        server.currentRfBroadcasts.forEach((frequency) => {\r\n          if (!broadcasts.find((b) => parseInt(b.frequency) === frequency)) {\r\n            this.emit(RCEEvent.FrequencyLost, {\r\n              server,\r\n              frequency,\r\n            });\r\n\r\n            server.currentRfBroadcasts = server.currentRfBroadcasts.filter(\r\n              (f) => f !== frequency\r\n            );\r\n          }\r\n        });\r\n\r\n        broadcasts.forEach((broadcast) => {\r\n          if (server.currentRfBroadcasts.includes(broadcast.frequency)) return;\r\n\r\n          server.currentRfBroadcasts.push(broadcast.frequency);\r\n\r\n          if (broadcast.frequency === 4765) {\r\n            this.emit(RCEEvent.EventStart, {\r\n              server,\r\n              event: \"Small Oil Rig\",\r\n              special: false,\r\n            });\r\n          } else if (broadcast.frequency === 4768) {\r\n            this.emit(RCEEvent.EventStart, {\r\n              server,\r\n              event: \"Oil Rig\",\r\n              special: false,\r\n            });\r\n          }\r\n\r\n          this.emit(RCEEvent.FrequencyReceived, {\r\n            server,\r\n            frequency: broadcast.frequency,\r\n            coordinates: broadcast.coordinates,\r\n            range: broadcast.range,\r\n          });\r\n        });\r\n\r\n        return this.servers.set(server.identifier, {\r\n          ...server,\r\n          currentRfBroadcasts: server.currentRfBroadcasts,\r\n        });\r\n      }\r\n\r\n      // Check for a command being executed\r\n      const executingMatch = log.match(\r\n        /Executing console system command '([^']+)'/\r\n      );\r\n      if (executingMatch) {\r\n        this.logger.debug(`Executing Message Found For: ${executingMatch[1]}`);\r\n        const command = executingMatch[1];\r\n\r\n        this.emit(RCEEvent.ExecutingCommand, {\r\n          server,\r\n          command,\r\n        });\r\n\r\n        // Handle command responses (if using sendCommand function)\r\n        const commandRequest = this.commands.find(\r\n          (req) =>\r\n            req.command === command &&\r\n            req.identifier === server.identifier &&\r\n            !req.timestamp\r\n        );\r\n        if (commandRequest) {\r\n          this.logger.debug(`Command \"${command}\" Found In The Queue!`);\r\n          commandRequest.timestamp = logMessageDate;\r\n\r\n          this.commands = this.commands.map((req) =>\r\n            req.command === command ? commandRequest : req\r\n          );\r\n\r\n          this.logger.debug(`Command \"${command}\" Updated With Timestamp!`);\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Check for a command response\r\n      const commandRequest = this.commands.find(\r\n        (req) =>\r\n          req.identifier === server.identifier &&\r\n          req.timestamp === logMessageDate\r\n      );\r\n      if (commandRequest && !log.startsWith(\"[ SAVE ]\")) {\r\n        this.logger.debug(\r\n          `Command Response Found For: ${commandRequest.command}`\r\n        );\r\n\r\n        commandRequest.resolve(log);\r\n        clearTimeout(commandRequest.timeout);\r\n\r\n        this.commands = this.commands.filter(\r\n          (req) =>\r\n            !(\r\n              req.command === commandRequest.command &&\r\n              req.identifier === commandRequest.identifier &&\r\n              req.timestamp === commandRequest.timestamp\r\n            )\r\n        );\r\n      }\r\n\r\n      this.emit(RCEEvent.Message, { server, message: log });\r\n      this.logger.debug(`Received Message: ${log} From ${server.identifier}`);\r\n\r\n      // PLAYER_KILL event\r\n      if (log.includes(\" was killed by \")) {\r\n        const [victim, killer] = log\r\n          .split(\" was killed by \")\r\n          .map((str) => str.trim());\r\n\r\n        const victimData = Helper.getKillInformation(victim);\r\n        const killerData = Helper.getKillInformation(killer);\r\n\r\n        this.emit(RCEEvent.PlayerKill, {\r\n          server,\r\n          victim: victimData,\r\n          killer: killerData,\r\n        });\r\n      }\r\n\r\n      // VENDING_MACHINE_NAME event\r\n      const vendingMachineMatch = log.match(\r\n        /\\[VENDING MACHINE\\] Player \\[ ([^\\]]+) \\] changed name from \\[ ([^\\]]+) \\] to \\[ ([^\\]]+) \\]/\r\n      );\r\n      if (vendingMachineMatch) {\r\n        const ign = vendingMachineMatch[1];\r\n        const oldName = vendingMachineMatch[2];\r\n        const newName = vendingMachineMatch[3];\r\n\r\n        this.emit(RCEEvent.VendingMachineName, {\r\n          server,\r\n          ign,\r\n          oldName,\r\n          newName,\r\n        });\r\n      }\r\n\r\n      // QUICK_CHAT event\r\n      const quickChatMatch = log.match(\r\n        /(\\[CHAT (TEAM|SERVER|LOCAL)\\]) ([\\w\\s\\-_]+) : (.+)/\r\n      );\r\n      if (quickChatMatch) {\r\n        const quickChatTypes = {\r\n          \"[CHAT TEAM]\": \"team\",\r\n          \"[CHAT SERVER]\": \"server\",\r\n          \"[CHAT LOCAL]\": \"local\",\r\n        };\r\n\r\n        const type = quickChatTypes[quickChatMatch[1]];\r\n        const ign = quickChatMatch[3];\r\n        let msg = quickChatMatch[4] as QuickChat;\r\n\r\n        this.emit(RCEEvent.QuickChat, {\r\n          server,\r\n          type,\r\n          ign,\r\n          message: msg as QuickChat,\r\n        });\r\n      }\r\n\r\n      if (log.includes(\"was suicide by Suicide\")) {\r\n        const ign = log.split(\" was suicide by Suicide\")[0];\r\n\r\n        this.emit(RCEEvent.PlayerSuicide, { server, ign });\r\n      }\r\n\r\n      // PLAYER_SUICIDE event\r\n      if (log.includes(\"was suicide by Suicide\")) {\r\n        const ign = log.split(\" was suicide by Suicide\")[0];\r\n\r\n        this.emit(RCEEvent.PlayerSuicide, { server, ign });\r\n      }\r\n\r\n      // PLAYER_RESPAWNED event\r\n      if (log.includes(\"has entered the game\")) {\r\n        const ign = log.split(\" [\")[0];\r\n        const platform = log.includes(\"[xboxone]\") ? \"XBL\" : \"PS\";\r\n\r\n        this.emit(RCEEvent.PlayerRespawned, { server, ign, platform });\r\n      }\r\n\r\n      // CUSTOM_ZONE_ADDED event\r\n      const customZoneAddedMatch = log.match(\r\n        /Successfully created zone \\[([\\w\\d\\s_-]+)\\]/\r\n      );\r\n\r\n      if (customZoneAddedMatch && customZoneAddedMatch[1]) {\r\n        const name = customZoneAddedMatch[1];\r\n        this.emit(RCEEvent.CustomZoneAdded, { server, name });\r\n      }\r\n\r\n      // CUSTOM_ZONE_REMOVED event\r\n      const customZoneRemovedMatch = log.match(\r\n        /Successfully removed zone \\[([\\w\\d\\s_-]+)\\]/\r\n      );\r\n\r\n      if (customZoneRemovedMatch && customZoneRemovedMatch[1]) {\r\n        const name = customZoneRemovedMatch[1];\r\n        this.emit(RCEEvent.CustomZoneAdded, { server, name });\r\n      }\r\n\r\n      // PLAYER_ROLE_ADD event\r\n      const roleMatch = log.match(\r\n        /\\[?SERVER\\]?\\s*Added\\s*\\[([^\\]]+)\\](?::\\[([^\\]]+)\\])?\\s*(?:to\\s*(?:Group\\s*)?)?\\[(\\w+)\\]/i\r\n      );\r\n      if (roleMatch && log.includes(\"Added\")) {\r\n        const ign = roleMatch[1];\r\n        const role = roleMatch[3];\r\n\r\n        this.emit(RCEEvent.PlayerRoleAdd, { server, ign, role });\r\n      }\r\n\r\n      // ITEM_SPAWN event\r\n      const itemSpawnMatch = log.match(\r\n        /\\bgiving ([\\w\\s_-]+) ([\\d.]+) x ([\\w\\s-]+(?: [\\w\\s-]+)*)\\b/\r\n      );\r\n      if (itemSpawnMatch) {\r\n        const ign = itemSpawnMatch[1];\r\n        const quantity = Number(itemSpawnMatch[2]);\r\n        const item = itemSpawnMatch[3];\r\n\r\n        this.emit(RCEEvent.ItemSpawn, { server, ign, item, quantity });\r\n      }\r\n\r\n      // NOTE_EDIT event\r\n      const noteMatch = log.match(\r\n        /\\[NOTE PANEL\\] Player \\[ ([^\\]]+) \\] changed name from \\[\\s*([\\s\\S]*?)\\s*\\] to \\[\\s*([\\s\\S]*?)\\s*\\]/\r\n      );\r\n      if (noteMatch) {\r\n        const ign = noteMatch[1].trim();\r\n        const oldContent = noteMatch[2].trim().split(\"\\\\n\")[0];\r\n        const newContent = noteMatch[3].trim().split(\"\\\\n\")[0];\r\n\r\n        if (newContent.length > 0 && oldContent !== newContent) {\r\n          this.emit(RCEEvent.NoteEdit, {\r\n            server,\r\n            ign,\r\n            oldContent,\r\n            newContent,\r\n          });\r\n        }\r\n      }\r\n\r\n      // TEAM_CREATE event\r\n      const teamCreateMatch = log.match(\r\n        /\\[([^\\]]+)\\] created a new team, ID: (\\d+)/\r\n      );\r\n      if (teamCreateMatch) {\r\n        const owner = teamCreateMatch[1];\r\n        const id = Number(teamCreateMatch[2]);\r\n\r\n        this.emit(RCEEvent.TeamCreate, { server, owner, id });\r\n      }\r\n\r\n      // TEAM_JOIN event\r\n      const teamJoinMatch = log.match(\r\n        /\\[([^\\]]+)\\] has joined \\[([^\\]]+)]s team, ID: \\[(\\d+)\\]/\r\n      );\r\n      if (teamJoinMatch) {\r\n        const ign = teamJoinMatch[1];\r\n        const owner = teamJoinMatch[2];\r\n        const id = Number(teamJoinMatch[3]);\r\n\r\n        this.emit(RCEEvent.TeamJoin, { server, ign, owner, id });\r\n      }\r\n\r\n      // TEAM_LEAVE event\r\n      const teamLeaveMatch = log.match(\r\n        /\\[([^\\]]+)\\] has left \\[([^\\]]+)]s team, ID: \\[(\\d+)\\]/\r\n      );\r\n\r\n      if (teamLeaveMatch) {\r\n        const ign = teamLeaveMatch[1];\r\n        const owner = teamLeaveMatch[2];\r\n        const id = Number(teamLeaveMatch[3]);\r\n\r\n        this.emit(RCEEvent.TeamLeave, { server, ign, owner, id });\r\n      }\r\n\r\n      // KIT_SPAWN event\r\n      const kitSpawnMatch = log.match(/SERVER giving (.+?) kit (\\w+)/);\r\n      if (kitSpawnMatch) {\r\n        const ign = kitSpawnMatch[1];\r\n        const kit = kitSpawnMatch[2];\r\n\r\n        this.emit(RCEEvent.KitSpawn, { server, ign, kit });\r\n      }\r\n\r\n      // KIT_GIVE event\r\n      const kitGiveMatch = log.match(\r\n        /\\[ServerVar\\] ([\\w\\s_-]+) giving ([\\w\\s_-]+) kit ([\\w\\s_-]+)/\r\n      );\r\n      if (kitGiveMatch) {\r\n        const admin = kitGiveMatch[1];\r\n        const ign = kitGiveMatch[2];\r\n        const kit = kitGiveMatch[3];\r\n\r\n        this.emit(RCEEvent.KitGive, { server, admin, ign, kit });\r\n      }\r\n\r\n      // SPECIAL_EVENT_START event\r\n      const specialEventStartMatch = log.match(/Setting event as :(\\w+)/);\r\n      if (specialEventStartMatch) {\r\n        const event = specialEventStartMatch[1] as\r\n          | \"Easter\"\r\n          | \"Halloween\"\r\n          | \"Xmas\"\r\n          | \"HalloweenPortal\"\r\n          | \"XmasPortal\";\r\n\r\n        this.emit(RCEEvent.SpecialEventStart, { server, event });\r\n      }\r\n\r\n      // SPECIAL_EVENT_END event\r\n      if (log.startsWith(\"Event set as: none\")) {\r\n        this.emit(RCEEvent.SpecialEventEnd, { server });\r\n      }\r\n\r\n      // EVENT_START event\r\n      if (log.startsWith(\"[event]\")) {\r\n        for (const [key, options] of Object.entries(EVENTS)) {\r\n          if (log.includes(key)) {\r\n            this.emit(RCEEvent.EventStart, {\r\n              server,\r\n              event: options.name as any,\r\n              special: options.special,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async resolveServerId(\r\n    region: \"US\" | \"EU\",\r\n    serverId: number,\r\n    identifier: string\r\n  ): Promise<number | undefined> {\r\n    if (!this.auth?.access_token) {\r\n      this.logError(\"Failed To Resolve Server ID: No Access Token!\");\r\n      return undefined;\r\n    }\r\n\r\n    if (this.tokenRefreshing) {\r\n      this.logger.warn(\"Token Is Refreshing, Retrying In A Few Seconds!\");\r\n      await this.sleep(3_000);\r\n      return this.resolveServerId(region, serverId, identifier);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(GPORTALRoutes.Api, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${this.auth.token_type} ${this.auth.access_token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          operationName: \"sid\",\r\n          variables: {\r\n            gameserverId: serverId,\r\n            region,\r\n          },\r\n          query:\r\n            \"query sid($gameserverId: Int!, $region: REGION!) {\\n  sid(gameserverId: $gameserverId, region: $region)\\n}\",\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        this.logger.debug(`Resolve Server ID Status: ${response.status}`);\r\n        this.logger.debug(response.body);\r\n        this.logError(\r\n          `[${identifier}] Failed To Resolve Server ID: ${response.statusText}`\r\n        );\r\n        return undefined;\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data?.errors?.length) {\r\n        this.logger.warn(\r\n          `[${identifier}] Resolve Server ID Error: ${data.errors[0].message}`\r\n        );\r\n        return undefined;\r\n      }\r\n\r\n      const sid = data?.data?.sid as number;\r\n\r\n      if (!sid) {\r\n        this.logger.warn(`[${identifier}] Invalid Server ID!`);\r\n        return undefined;\r\n      }\r\n\r\n      return sid;\r\n    } catch (err) {\r\n      this.logError(`[${identifier}] Failed To Resolve Server ID: ${err}`);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private markServerAsUnready(server: RustServer) {\r\n    this.servers.set(server.identifier, {\r\n      ...server,\r\n      ready: false,\r\n    });\r\n\r\n    this.logger.info(`Server \"${server.identifier}\" Is Not Ready!`);\r\n  }\r\n\r\n  private markServerAsReady(server: RustServer) {\r\n    this.servers.set(server.identifier, {\r\n      ...server,\r\n      ready: true,\r\n    });\r\n\r\n    this.logger.info(`[${server.identifier}] Server Is Ready!`);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue() {\r\n    this.servers.forEach((server) => {\r\n      if (server.ready) {\r\n        const queuedCommands = this.queue.filter(\r\n          (cmd) => cmd.identifier === server.identifier\r\n        );\r\n\r\n        this.queue = this.queue.filter(\r\n          (cmd) => cmd.identifier !== server.identifier\r\n        );\r\n\r\n        queuedCommands.forEach(\r\n          ({ identifier, command, response, resolve, reject }) => {\r\n            const s = this.getServer(identifier);\r\n            this.sendCommandInternal(s, command, response)\r\n              .then(resolve)\r\n              .catch(reject);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  private async sendCommandInternal(\r\n    server: RustServer,\r\n    command: string,\r\n    response: boolean\r\n  ): Promise<string | undefined | null> {\r\n    if (!this.auth?.access_token) {\r\n      this.logError(\"Failed To Send Command: No Access Token!\");\r\n      return null;\r\n    }\r\n\r\n    if (!this.socket || !this.socket.OPEN) {\r\n      this.logError(\"Failed To Send Command: No Websocket Connection!\");\r\n      return null;\r\n    }\r\n\r\n    if (this.tokenRefreshing) {\r\n      this.logger.warn(\"Token Is Refreshing, Retrying In A Few Seconds!\");\r\n      await this.sleep(3_000);\r\n      return this.sendCommandInternal(server, command, response);\r\n    }\r\n\r\n    this.logger.debug(`Sending command \"${command}\" to ${server.identifier}`);\r\n\r\n    const payload = {\r\n      operationName: \"sendConsoleMessage\",\r\n      variables: {\r\n        sid: server.trueServerId,\r\n        region: server.region,\r\n        message: command,\r\n      },\r\n      query:\r\n        \"mutation sendConsoleMessage($sid: Int!, $region: REGION!, $message: String!) {\\n  sendConsoleMessage(rsid: {id: $sid, region: $region}, message: $message) {\\n    ok\\n    __typename\\n  }\\n}\",\r\n    };\r\n\r\n    if (response) {\r\n      return new Promise((resolve, reject) => {\r\n        this.commands.push({\r\n          identifier: server.identifier,\r\n          command,\r\n          resolve,\r\n          reject,\r\n          timeout: undefined,\r\n        });\r\n\r\n        this.logger.debug(`Command \"${command}\" Added To Queue!`);\r\n\r\n        try {\r\n          fetch(GPORTALRoutes.Api, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `${this.auth.token_type} ${this.auth.access_token}`,\r\n            },\r\n            body: JSON.stringify(payload),\r\n          })\r\n            .then((res) => {\r\n              if (!res.ok) {\r\n                this.logger.debug(`Send Command Status: ${res.status}`);\r\n                this.logError(\r\n                  `Failed To Send Command: ${res.statusText}`,\r\n                  server\r\n                );\r\n                return null;\r\n              }\r\n\r\n              this.logger.debug(`Command \"${command}\" Sent Successfully!`);\r\n              this.logger.debug(`Starting Timeout For Command \"${command}\"`);\r\n\r\n              const cmd = this.commands.find(\r\n                (req) =>\r\n                  req.command === command &&\r\n                  req.identifier === server.identifier\r\n              );\r\n\r\n              if (cmd) {\r\n                cmd.timeout = setTimeout(() => {\r\n                  this.commands = this.commands.filter(\r\n                    (req) =>\r\n                      req.command !== command &&\r\n                      req.identifier !== server.identifier\r\n                  );\r\n                  resolve(undefined);\r\n                }, 3_000);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              this.commands = this.commands.filter(\r\n                (req) =>\r\n                  req.command !== command &&\r\n                  req.identifier !== server.identifier\r\n              );\r\n              reject(err);\r\n            });\r\n        } catch (err) {\r\n          this.commands = this.commands.filter(\r\n            (req) =>\r\n              req.command !== command && req.identifier !== server.identifier\r\n          );\r\n          reject(err);\r\n        }\r\n      });\r\n    } else {\r\n      try {\r\n        const response = await fetch(GPORTALRoutes.Api, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `${this.auth.token_type} ${this.auth.access_token}`,\r\n          },\r\n          body: JSON.stringify(payload),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          this.logger.debug(`Send Command Status: ${response.status}`);\r\n          this.logError(\r\n            `Failed To Send Command: ${response.statusText}`,\r\n            server\r\n          );\r\n          return null;\r\n        }\r\n\r\n        this.logger.debug(`Command \"${command}\" Sent Successfully!`);\r\n        return undefined;\r\n      } catch (err) {\r\n        this.logError(`Failed To Send Command: ${err}`, server);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n    * Send a command to a Rust server\r\n\r\n    * @param {string} identifier - The server identifier\r\n    * @param {string} command - The command to send\r\n    * @param {boolean} [response=false] - Whether to wait for a response\r\n    * @returns {Promise<string | undefined | null>}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * await rce.sendCommand(\"server1\", \"RemoveOwner username\");\r\n    * @example\r\n    * await rce.sendCommand(\"server1\", \"BanID username\", true);\r\n  */\r\n  public async sendCommand(\r\n    identifier: string,\r\n    command: string,\r\n    response: boolean = false\r\n  ): Promise<string | undefined | null> {\r\n    return new Promise((resolve, reject) => {\r\n      const server = this.getServer(identifier);\r\n\r\n      if (!server) {\r\n        this.logError(\r\n          `[${identifier}] Failed To Send Command: No Server Found For ID ${identifier}`\r\n        );\r\n        return null;\r\n      }\r\n\r\n      if (server.ready) {\r\n        this.logger.debug(\r\n          `[${identifier}] The Server Is Ready, Sending Command Immediately`\r\n        );\r\n        this.sendCommandInternal(server, command, response)\r\n          .then(resolve)\r\n          .catch(reject);\r\n      } else {\r\n        this.logger.debug(\r\n          `[${identifier}] The Server Is Not Ready, Adding Command To Queue`\r\n        );\r\n        this.queue.push({ identifier, command, response, resolve, reject });\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n    * Add a Rust server to the manager\r\n\r\n    * @param {ServerOptions} opts - The server options\r\n    * @returns {Promise<boolean>}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * await rce.addServer({ identifier: \"server1\", region: \"US\", serverId: 12345 });\r\n    * @example\r\n    * await rce.addServer({ identifier: \"server2\", region: \"EU\", serverId: 54321, refreshPlayers: 5 });\r\n  */\r\n  public async addServer(opts: ServerOptions): Promise<boolean> {\r\n    this.logger.debug(`[${opts.identifier}] Adding Server!`);\r\n\r\n    const sid = await this.resolveServerId(\r\n      opts.region,\r\n      opts.serverId,\r\n      opts.identifier\r\n    );\r\n    if (!sid) {\r\n      this.logError(\r\n        `[${opts.identifier}] Failed To Add Server: No Server ID Found!`\r\n      );\r\n      return false;\r\n    }\r\n\r\n    const currentState = await this.fetchServiceState(sid, opts.region);\r\n    this.logger.debug(`Current state for ${opts.identifier}: ${currentState}`);\r\n    if (!currentState) {\r\n      this.logError(\r\n        `[${opts.identifier}] Failed To Add Server: No Current State Found!`\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (currentState === \"SUSPENDED\") {\r\n      this.logger.warn(`[${opts.identifier}] Server Is Suspended! Skipping!`);\r\n      return false;\r\n    }\r\n\r\n    if (this.socket?.OPEN) {\r\n      this.servers.set(opts.identifier, {\r\n        identifier: opts.identifier,\r\n        serverId: opts.serverId,\r\n        trueServerId: sid,\r\n        region: opts.region,\r\n        refreshPlayers: opts.refreshPlayers || 0,\r\n        state: opts.state || [],\r\n        flags: [],\r\n        refreshPlayersInterval: opts.refreshPlayers\r\n          ? setInterval(() => {\r\n              this.sendCommand(opts.identifier, \"Users\");\r\n            }, opts.refreshPlayers * 60_000)\r\n          : undefined,\r\n        rfBroadcasting: opts.rfBroadcasting || false,\r\n        rfBroadcastingInterval: opts.rfBroadcasting\r\n          ? setInterval(() => {\r\n              this.sendCommand(opts.identifier, \"rf.listboardcaster\");\r\n            }, 30_000)\r\n          : undefined,\r\n        currentRfBroadcasts: [],\r\n        heliFeeds: opts.heliFeeds || false,\r\n        heliFeedsInterval: opts.heliFeeds\r\n          ? setInterval(() => {\r\n              this.sendCommand(\r\n                opts.identifier,\r\n                \"find_entity servergibs_patrolhelicopter\"\r\n              );\r\n            }, 60_000)\r\n          : undefined,\r\n        bradFeeds: opts.bradFeeds || false,\r\n        bradFeedsInterval: opts.bradFeeds\r\n          ? setInterval(() => {\r\n              this.sendCommand(\r\n                opts.identifier,\r\n                \"find_entity servergibs_bradley\"\r\n              );\r\n            }, 60_000)\r\n          : undefined,\r\n        players: [],\r\n        added: true,\r\n        ready: false,\r\n        serviceState: currentState,\r\n      });\r\n\r\n      this.requests.set(opts.identifier, {\r\n        sid,\r\n        region: opts.region,\r\n        identifier: opts.identifier,\r\n      });\r\n\r\n      this.socket.send(\r\n        JSON.stringify({\r\n          type: GPORTALWebsocketTypes.Start,\r\n          payload: {\r\n            variables: { sid, region: opts.region },\r\n            extensions: {},\r\n            operationName: \"consoleMessages\",\r\n            query: `subscription consoleMessages($sid: Int!, $region: REGION!) {\r\n            consoleMessages(rsid: {id: $sid, region: $region}) {\r\n              stream\r\n              message\r\n              __typename\r\n            }\r\n          }`,\r\n          },\r\n          id: opts.identifier,\r\n        }),\r\n        (err) => {\r\n          if (err) {\r\n            this.logError(`[${opts.identifier}] Failed To Add Server: ${err}`);\r\n            return false;\r\n          }\r\n\r\n          this.socket.send(\r\n            JSON.stringify({\r\n              type: GPORTALWebsocketTypes.Start,\r\n              payload: {\r\n                variables: { sid, region: opts.region },\r\n                extensions: {},\r\n                operationName: \"serviceState\",\r\n                query:\r\n                  \"subscription serviceState($sid: Int!, $region: REGION!) {\\n  serviceState(rsid: {id: $sid, region: $region}) {\\n    ...ServiceStateFields\\n    __typename\\n  }\\n}\\n\\nfragment ServiceStateFields on ServiceState {\\n  state\\n  fsmState\\n  fsmIsTransitioning\\n  fsmIsExclusiveLocked\\n  fsmFileAccess\\n  fsmLastStateChange\\n  fsmStateLiveProgress {\\n    ... on InstallProgress {\\n      action\\n      percentage\\n      __typename\\n    }\\n    ... on BroadcastProgress {\\n      nextMessageAt\\n      stateExitAt\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\",\r\n              },\r\n              id: opts.identifier,\r\n            }),\r\n            (err) => {\r\n              if (err) {\r\n                this.logError(\r\n                  `[${opts.identifier}] Failed To Add Server: ${err}`\r\n                );\r\n                return false;\r\n              }\r\n            }\r\n          );\r\n\r\n          if (opts.refreshPlayers) {\r\n            this.sendCommand(opts.identifier, \"Users\");\r\n          }\r\n\r\n          if (currentState === \"RUNNING\") {\r\n            this.markServerAsReady(this.getServer(opts.identifier));\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.logger.warn(\r\n        `[${opts.identifier}] Failed To Add Server: No Websocket Connection, Retrying In 5 Seconds!`\r\n      );\r\n      setTimeout(() => this.addServer(opts), 5_000);\r\n    }\r\n  }\r\n\r\n  private comparePopulation(\r\n    oldList: string[],\r\n    newList: string[]\r\n  ): {\r\n    joined: string[];\r\n    left: string[];\r\n  } {\r\n    const joined = newList.filter((ign) => !oldList.includes(ign));\r\n    const left = oldList.filter((ign) => !newList.includes(ign));\r\n\r\n    return { joined, left };\r\n  }\r\n\r\n  /*\r\n    * Get a Rust server from the manager\r\n\r\n    * @param {string}\r\n    * @returns {RustServer}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * const server = rce.getServer(\"server1\");\r\n  */\r\n  public getServer(identifier: string) {\r\n    return this.servers.get(identifier);\r\n  }\r\n\r\n  /*\r\n    * Remove a Rust server from the manager\r\n\r\n    * @param {string}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * rce.removeServer(\"server1\");\r\n    * @example\r\n    * rce.removeServer(\"my-solo-duo-trio-3x\");\r\n  */\r\n  public removeServer(identifier: string) {\r\n    clearInterval(this.getServer(identifier)?.refreshPlayersInterval);\r\n    clearInterval(this.getServer(identifier)?.rfBroadcastingInterval);\r\n    clearInterval(this.getServer(identifier)?.bradFeedsInterval);\r\n    clearInterval(this.getServer(identifier)?.heliFeedsInterval);\r\n    this.servers.delete(identifier);\r\n\r\n    const request = this.requests.get(identifier);\r\n    if (request) this.requests.delete(request.identifier);\r\n\r\n    this.logger.info(`Server \"${identifier}\" Was Successfully Removed!`);\r\n  }\r\n\r\n  /*\r\n    * Get all Rust servers from the manager\r\n\r\n    * @returns {Map<string, RustServer>}\r\n    * @memberof RCEManager\r\n    * @example\r\n    * const servers = rce.getServers();\r\n    * for (const [identifier, server] of servers) {\r\n    *  console.log(identifier, server);\r\n    * }\r\n  */\r\n  public getServers() {\r\n    return this.servers;\r\n  }\r\n\r\n  private async sleep(ms: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n}\r\n"]}