{"version":3,"file":"responseHandler.js","sourceRoot":"","sources":["../../src/commands/responseHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCEEvent, type IServer } from \"../types\";\nimport type RCEManager from \"../manager\";\nimport { RegularExpressions } from \"../data/regularExpressions\";\nimport { QuickChat } from \"../data/quickChat\";\nimport { EVENTS } from \"../data/events\";\nimport { getKill } from \"../data/playerKill\";\n\nexport default class ResponseHandler {\n  public static handle(manager: RCEManager, server: IServer, message: string) {\n    // Emit the message event\n    manager.emit(RCEEvent.Message, {\n      server,\n      message,\n    });\n\n    // Event: Vending Machine Name\n    const vendingMachineNameMatch = message.match(\n      RegularExpressions.VendingMachineName\n    );\n    if (vendingMachineNameMatch) {\n      manager.emit(RCEEvent.VendingMachineName, {\n        server,\n        ign: vendingMachineNameMatch[1],\n        oldName: vendingMachineNameMatch[2],\n        newName: vendingMachineNameMatch[3],\n      });\n    }\n\n    // Event: Quick Chat\n    const quickChatMatch = message.match(RegularExpressions.QuickChat);\n    if (quickChatMatch) {\n      const types = {\n        \"[CHAT TEAM]\": \"team\",\n        \"[CHAT SERVER]\": \"server\",\n        \"[CHAT LOCAL]\": \"local\",\n      };\n\n      manager.emit(RCEEvent.QuickChat, {\n        server,\n        type: types[quickChatMatch[1]],\n        ign: quickChatMatch[3],\n        message: quickChatMatch[4] as QuickChat,\n      });\n    }\n\n    // Event: Player Suicide\n    if (message.includes(\"was suicide by Suicide\")) {\n      const ign = message.split(\" was suicide by Suicide\")[0];\n\n      manager.emit(RCEEvent.PlayerSuicide, {\n        server,\n        ign,\n      });\n    }\n\n    // Event: Player Respawned\n    if (message.includes(\"has entered the game\")) {\n      const ign = message.split(\" [\")[0];\n      const platform = message.includes(\"[SCARLETT]\") ? \"XBL\" : \"PS\";\n\n      manager.emit(RCEEvent.PlayerRespawned, {\n        server,\n        ign,\n        platform,\n      });\n    }\n\n    // Event: Custom Zone Created\n    const customZoneCreatedMatch = message.match(\n      RegularExpressions.CustomZoneCreated\n    );\n    if (customZoneCreatedMatch) {\n      manager.emit(RCEEvent.CustomZoneCreated, {\n        server,\n        zone: customZoneCreatedMatch[1],\n      });\n    }\n\n    // Event: Custom Zone Removed\n    const customZoneRemovedMatch = message.match(\n      RegularExpressions.CustomZoneRemoved\n    );\n    if (customZoneRemovedMatch) {\n      manager.emit(RCEEvent.CustomZoneRemoved, {\n        server,\n        zone: customZoneRemovedMatch[1],\n      });\n    }\n\n    // Event: Player Role Add\n    if (message.includes(\"Added\")) {\n      const playerRoleAddMatch = message.match(\n        RegularExpressions.PlayerRoleAdd\n      );\n      if (playerRoleAddMatch) {\n        manager.emit(RCEEvent.PlayerRoleAdd, {\n          server,\n          admin:\n            playerRoleAddMatch[1] === \"SERVER\"\n              ? undefined\n              : playerRoleAddMatch[1],\n          ign: playerRoleAddMatch[2],\n          role: playerRoleAddMatch[3],\n        });\n      }\n    }\n\n    // Event: Player Role Remove\n    if (message.includes(\"Removed\")) {\n      const playerRoleRemoveMatch = message.match(\n        RegularExpressions.PlayerRoleRemove\n      );\n      if (playerRoleRemoveMatch) {\n        manager.emit(RCEEvent.PlayerRoleRemove, {\n          server,\n          admin:\n            playerRoleRemoveMatch[1] === \"SERVER\"\n              ? undefined\n              : playerRoleRemoveMatch[1],\n          ign: playerRoleRemoveMatch[2],\n          role: playerRoleRemoveMatch[3],\n        });\n      }\n    }\n\n    // Event: Item Spawn\n    const itemSpawnMatch = message.match(RegularExpressions.ItemSpawn);\n    if (itemSpawnMatch) {\n      manager.emit(RCEEvent.ItemSpawn, {\n        server,\n        ign: itemSpawnMatch[1],\n        item: itemSpawnMatch[3],\n        quantity: parseInt(itemSpawnMatch[2]),\n      });\n    }\n\n    // Event: Note Edit\n    const noteEditMatch = message.match(RegularExpressions.NoteEdit);\n    if (noteEditMatch) {\n      const oldContent = noteEditMatch[2].trim().split(\"\\\\n\")[0];\n      const newContent = noteEditMatch[3].trim().split(\"\\\\n\")[0];\n\n      if (newContent.length > 0 && newContent !== oldContent) {\n        manager.emit(RCEEvent.NoteEdit, {\n          server,\n          ign: noteEditMatch[1],\n          oldContent,\n          newContent,\n        });\n      }\n    }\n\n    // Event: Team Create\n    const teamCreateMatch = message.match(RegularExpressions.TeamCreate);\n    if (teamCreateMatch) {\n      manager.emit(RCEEvent.TeamCreated, {\n        server,\n        id: parseInt(teamCreateMatch[2]),\n        owner: teamCreateMatch[1],\n      });\n    }\n\n    // Event: Team Join\n    const teamJoinMatch = message.match(RegularExpressions.TeamJoin);\n    if (teamJoinMatch) {\n      manager.emit(RCEEvent.TeamJoin, {\n        server,\n        id: parseInt(teamJoinMatch[3]),\n        owner: teamJoinMatch[2],\n        ign: teamJoinMatch[1],\n      });\n    }\n\n    // Event: Team Leave\n    const teamLeaveMatch = message.match(RegularExpressions.TeamLeave);\n    if (teamLeaveMatch) {\n      manager.emit(RCEEvent.TeamLeave, {\n        server,\n        id: parseInt(teamLeaveMatch[3]),\n        owner: teamLeaveMatch[2],\n        ign: teamLeaveMatch[1],\n      });\n    }\n\n    // Event: Team Invite\n    const teamInviteMatch = message.match(RegularExpressions.TeamInvite);\n    if (teamInviteMatch) {\n      manager.emit(RCEEvent.TeamInvite, {\n        server,\n        id: parseInt(teamInviteMatch[3]),\n        owner: teamInviteMatch[1],\n        ign: teamInviteMatch[2],\n      });\n    }\n\n    // Event: Team Invite Cancel\n    const teamInviteCancelMatch = message.match(\n      RegularExpressions.TeamInviteCancel\n    );\n    if (teamInviteCancelMatch) {\n      manager.emit(RCEEvent.TeamInviteCancel, {\n        server,\n        id: parseInt(teamInviteCancelMatch[3]),\n        owner: teamInviteCancelMatch[2],\n        ign: teamInviteCancelMatch[1],\n      });\n    }\n\n    // Event: Team Promoted\n    const teamPromotedMatch = message.match(RegularExpressions.TeamPromoted);\n    if (teamPromotedMatch) {\n      manager.emit(RCEEvent.TeamPromoted, {\n        server,\n        id: parseInt(teamPromotedMatch[3]),\n        oldOwner: teamPromotedMatch[1],\n        newOwner: teamPromotedMatch[2],\n      });\n    }\n\n    // Event: Kit Spawn\n    const kitSpawnMatch = message.match(RegularExpressions.KitSpawn);\n    if (kitSpawnMatch) {\n      manager.emit(RCEEvent.KitSpawn, {\n        server,\n        admin: undefined,\n        ign: kitSpawnMatch[1],\n        kit: kitSpawnMatch[2],\n      });\n    }\n\n    // Event: Kit Give\n    const kitGiveMatch = message.match(RegularExpressions.KitGive);\n    if (kitGiveMatch) {\n      manager.emit(RCEEvent.KitSpawn, {\n        server,\n        admin: kitGiveMatch[1],\n        ign: kitGiveMatch[2],\n        kit: kitGiveMatch[3],\n      });\n    }\n\n    // Event: Event Start\n    if (message.startsWith(\"[EVENT\")) {\n      for (const [key, options] of Object.entries(EVENTS)) {\n        if (message.includes(key)) {\n          manager.emit(RCEEvent.EventStart, {\n            server,\n            event: options.name as any,\n            special: options.special,\n          });\n        }\n      }\n    }\n\n    // Event: Player Kill\n    if (message.includes(\" was killed by \")) {\n      const [victim, killer] = message\n        .split(\" was killed by \")\n        .map((str) => str.trim());\n\n      const victimData = getKill(victim);\n      const killerData = getKill(killer);\n\n      manager.emit(RCEEvent.PlayerKill, {\n        server,\n        victim: victimData,\n        killer: killerData,\n      });\n    }\n  }\n}\n"]}