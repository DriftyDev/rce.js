{"version":3,"file":"responseHandler.js","sourceRoot":"","sources":["../../src/commands/responseHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCEEvent, type IServer } from \"../types\";\r\nimport type RCEManager from \"../manager\";\r\nimport { RegularExpressions } from \"../data/regularExpressions\";\r\nimport { QuickChat } from \"../data/quickChat\";\r\nimport { EVENTS } from \"../data/events\";\r\nimport { getKill } from \"../data/playerKill\";\r\n\r\nexport default class ResponseHandler {\r\n  public static handle(manager: RCEManager, server: IServer, message: string) {\r\n    // Emit the message event\r\n    manager.emit(RCEEvent.Message, {\r\n      server,\r\n      message,\r\n    });\r\n\r\n    // Event: Vending Machine Name\r\n    const vendingMachineNameMatch = message.match(\r\n      RegularExpressions.VendingMachineName\r\n    );\r\n    if (vendingMachineNameMatch) {\r\n      manager.emit(RCEEvent.VendingMachineName, {\r\n        server,\r\n        ign: vendingMachineNameMatch[1],\r\n        oldName: vendingMachineNameMatch[2],\r\n        newName: vendingMachineNameMatch[3],\r\n      });\r\n    }\r\n\r\n    // Event: Quick Chat\r\n    const quickChatMatch = message.match(RegularExpressions.QuickChat);\r\n    if (quickChatMatch) {\r\n      const types = {\r\n        \"[CHAT TEAM]\": \"team\",\r\n        \"[CHAT SERVER]\": \"server\",\r\n        \"[CHAT LOCAL]\": \"local\",\r\n      };\r\n\r\n      manager.emit(RCEEvent.QuickChat, {\r\n        server,\r\n        type: types[quickChatMatch[1]],\r\n        ign: quickChatMatch[3],\r\n        message: quickChatMatch[4] as QuickChat,\r\n      });\r\n    }\r\n\r\n    // Event: Player Suicide\r\n    if (message.includes(\"was suicide by Suicide\")) {\r\n      const ign = message.split(\" was suicide by Suicide\")[0];\r\n\r\n      manager.emit(RCEEvent.PlayerSuicide, {\r\n        server,\r\n        ign,\r\n      });\r\n    }\r\n\r\n    // Event: Player Respawned\r\n    if (message.includes(\"has entered the game\")) {\r\n      const ign = message.split(\" [\")[0];\r\n      const platform = message.includes(\"[SCARLETT]\") ? \"XBL\" : \"PS\";\r\n\r\n      manager.emit(RCEEvent.PlayerRespawned, {\r\n        server,\r\n        ign,\r\n        platform,\r\n      });\r\n    }\r\n\r\n    // Event: Custom Zone Created\r\n    const customZoneCreatedMatch = message.match(\r\n      RegularExpressions.CustomZoneCreated\r\n    );\r\n    if (customZoneCreatedMatch) {\r\n      manager.emit(RCEEvent.CustomZoneCreated, {\r\n        server,\r\n        zone: customZoneCreatedMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Custom Zone Removed\r\n    const customZoneRemovedMatch = message.match(\r\n      RegularExpressions.CustomZoneRemoved\r\n    );\r\n    if (customZoneRemovedMatch) {\r\n      manager.emit(RCEEvent.CustomZoneRemoved, {\r\n        server,\r\n        zone: customZoneRemovedMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Player Role Add\r\n    if (message.includes(\"Added\")) {\r\n      const playerRoleAddMatch = message.match(\r\n        RegularExpressions.PlayerRoleAdd\r\n      );\r\n      if (playerRoleAddMatch) {\r\n        manager.emit(RCEEvent.PlayerRoleAdd, {\r\n          server,\r\n          admin:\r\n            playerRoleAddMatch[1] === \"SERVER\"\r\n              ? undefined\r\n              : playerRoleAddMatch[1],\r\n          ign: playerRoleAddMatch[2],\r\n          role: playerRoleAddMatch[3],\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Player Role Remove\r\n    if (message.includes(\"Removed\")) {\r\n      const playerRoleRemoveMatch = message.match(\r\n        RegularExpressions.PlayerRoleRemove\r\n      );\r\n      if (playerRoleRemoveMatch) {\r\n        manager.emit(RCEEvent.PlayerRoleRemove, {\r\n          server,\r\n          admin:\r\n            playerRoleRemoveMatch[1] === \"SERVER\"\r\n              ? undefined\r\n              : playerRoleRemoveMatch[1],\r\n          ign: playerRoleRemoveMatch[2],\r\n          role: playerRoleRemoveMatch[3],\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Item Spawn\r\n    const itemSpawnMatch = message.match(RegularExpressions.ItemSpawn);\r\n    if (itemSpawnMatch) {\r\n      manager.emit(RCEEvent.ItemSpawn, {\r\n        server,\r\n        ign: itemSpawnMatch[1],\r\n        item: itemSpawnMatch[3],\r\n        quantity: parseInt(itemSpawnMatch[2]),\r\n      });\r\n    }\r\n\r\n    // Event: Note Edit\r\n    const noteEditMatch = message.match(RegularExpressions.NoteEdit);\r\n    if (noteEditMatch) {\r\n      const oldContent = noteEditMatch[2].trim().split(\"\\\\n\")[0];\r\n      const newContent = noteEditMatch[3].trim().split(\"\\\\n\")[0];\r\n\r\n      if (newContent.length > 0 && newContent !== oldContent) {\r\n        manager.emit(RCEEvent.NoteEdit, {\r\n          server,\r\n          ign: noteEditMatch[1],\r\n          oldContent,\r\n          newContent,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Team Create\r\n    const teamCreateMatch = message.match(RegularExpressions.TeamCreate);\r\n    if (teamCreateMatch) {\r\n      manager.emit(RCEEvent.TeamCreated, {\r\n        server,\r\n        id: parseInt(teamCreateMatch[2]),\r\n        owner: teamCreateMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Team Join\r\n    const teamJoinMatch = message.match(RegularExpressions.TeamJoin);\r\n    if (teamJoinMatch) {\r\n      manager.emit(RCEEvent.TeamJoin, {\r\n        server,\r\n        id: parseInt(teamJoinMatch[3]),\r\n        owner: teamJoinMatch[2],\r\n        ign: teamJoinMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Team Leave\r\n    const teamLeaveMatch = message.match(RegularExpressions.TeamLeave);\r\n    if (teamLeaveMatch) {\r\n      manager.emit(RCEEvent.TeamLeave, {\r\n        server,\r\n        id: parseInt(teamLeaveMatch[3]),\r\n        owner: teamLeaveMatch[2],\r\n        ign: teamLeaveMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Team Invite\r\n    const teamInviteMatch = message.match(RegularExpressions.TeamInvite);\r\n    if (teamInviteMatch) {\r\n      manager.emit(RCEEvent.TeamInvite, {\r\n        server,\r\n        id: parseInt(teamInviteMatch[3]),\r\n        owner: teamInviteMatch[1],\r\n        ign: teamInviteMatch[2],\r\n      });\r\n    }\r\n\r\n    // Event: Team Invite Cancel\r\n    const teamInviteCancelMatch = message.match(\r\n      RegularExpressions.TeamInviteCancel\r\n    );\r\n    if (teamInviteCancelMatch) {\r\n      manager.emit(RCEEvent.TeamInviteCancel, {\r\n        server,\r\n        id: parseInt(teamInviteCancelMatch[3]),\r\n        owner: teamInviteCancelMatch[2],\r\n        ign: teamInviteCancelMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Team Promoted\r\n    const teamPromotedMatch = message.match(RegularExpressions.TeamPromoted);\r\n    if (teamPromotedMatch) {\r\n      manager.emit(RCEEvent.TeamPromoted, {\r\n        server,\r\n        id: parseInt(teamPromotedMatch[3]),\r\n        oldOwner: teamPromotedMatch[1],\r\n        newOwner: teamPromotedMatch[2],\r\n      });\r\n    }\r\n\r\n    // Event: Kit Spawn\r\n    const kitSpawnMatch = message.match(RegularExpressions.KitSpawn);\r\n    if (kitSpawnMatch) {\r\n      manager.emit(RCEEvent.KitSpawn, {\r\n        server,\r\n        admin: undefined,\r\n        ign: kitSpawnMatch[1],\r\n        kit: kitSpawnMatch[2],\r\n      });\r\n    }\r\n\r\n    // Event: Kit Give\r\n    const kitGiveMatch = message.match(RegularExpressions.KitGive);\r\n    if (kitGiveMatch) {\r\n      manager.emit(RCEEvent.KitSpawn, {\r\n        server,\r\n        admin: kitGiveMatch[1],\r\n        ign: kitGiveMatch[2],\r\n        kit: kitGiveMatch[3],\r\n      });\r\n    }\r\n\r\n    // Event: Event Start\r\n    if (message.startsWith(\"[EVENT\")) {\r\n      for (const [key, options] of Object.entries(EVENTS)) {\r\n        if (message.includes(key)) {\r\n          manager.emit(RCEEvent.EventStart, {\r\n            server,\r\n            event: options.name as any,\r\n            special: options.special,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Event: Player Kill\r\n    if (message.includes(\" was killed by \")) {\r\n      const [victim, killer] = message\r\n        .split(\" was killed by \")\r\n        .map((str) => str.trim());\r\n\r\n      const victimData = getKill(victim);\r\n      const killerData = getKill(killer);\r\n\r\n      manager.emit(RCEEvent.PlayerKill, {\r\n        server,\r\n        victim: victimData,\r\n        killer: killerData,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}