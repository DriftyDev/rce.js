<<<<<<< HEAD
{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/servers/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["export interface ServerOptions {\r\n  identifier: string;\r\n  serverId: number | number[];\r\n  region: \"EU\" | \"US\";\r\n  state?: any[];\r\n  playerRefreshing?: boolean;\r\n  radioRefreshing?: boolean;\r\n  extendedEventRefreshing?: boolean;\r\n  intents: string[];\r\n}\r\n\r\nexport interface FetchedServer {\r\n  rawName: string;\r\n  name: string;\r\n  region: \"EU\" | \"US\";\r\n  sid: number[];\r\n}\r\n\r\nexport interface RustServer {\r\n  identifier: string;\r\n  serverId: number[]; // url, backend\r\n  region: \"EU\" | \"US\";\r\n  intervals: RustServerIntervals;\r\n  flags: string[];\r\n  state: any[];\r\n  status:\r\n    | \"STOPPING\"\r\n    | \"MAINTENANCE\"\r\n    | \"UPDATING\"\r\n    | \"STOPPED\"\r\n    | \"STARTING\"\r\n    | \"RUNNING\"\r\n    | \"SUSPENDED\"\r\n    | \"UNKNOWN\";\r\n  players: string[];\r\n  frequencies: number[];\r\n  intents: string[];\r\n}\r\n\r\ninterface RustServerIntervals {\r\n  playerRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\r\n  radioRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\r\n  extendedEventRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\r\n}\r\n\r\nexport interface CommandRequest {\r\n  identifier: string;\r\n  command: string;\r\n  timestamp?: string;\r\n  resolve: (value: CommandResponse) => void;\r\n  reject: (reason: any) => void;\r\n  timeout?: ReturnType<typeof setTimeout>;\r\n}\r\n\r\nexport interface CommandResponse {\r\n  ok: boolean;\r\n  response?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface RustServerInformation {\r\n  Hostname: string;\r\n  MaxPlayers: number;\r\n  Players: number;\r\n  Queued: number;\r\n  Joining: number;\r\n  EntityCount: number;\r\n  GameTime: string;\r\n  Uptime: number;\r\n  Map: \"Procedural Map\";\r\n  Framerate: number;\r\n  Memory: number;\r\n  Collections: number;\r\n  NetworkIn: number;\r\n  NetworkOut: number;\r\n  Restarting: boolean;\r\n  SaveCreatedTime: string;\r\n}\r\n"]}
=======
{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/servers/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["export interface ServerOptions {\n  identifier: string;\n  serverId: number | number[];\n  region: \"EU\" | \"US\";\n  state?: any[];\n  playerRefreshing?: boolean;\n  radioRefreshing?: boolean;\n  extendedEventRefreshing?: boolean;\n  intents: string[];\n}\n\nexport interface FetchedServer {\n  rawName: string;\n  name: string;\n  region: \"EU\" | \"US\";\n  sid: number[];\n}\n\nexport interface RustServer {\n  identifier: string;\n  serverId: number[]; // url, backend\n  region: \"EU\" | \"US\";\n  intervals: RustServerIntervals;\n  flags: string[];\n  state: any[];\n  status:\n    | \"STOPPING\"\n    | \"MAINTENANCE\"\n    | \"UPDATING\"\n    | \"STOPPED\"\n    | \"STARTING\"\n    | \"RUNNING\"\n    | \"SUSPENDED\"\n    | \"UNKNOWN\";\n  players: string[];\n  frequencies: number[];\n  intents: string[];\n}\n\ninterface RustServerIntervals {\n  playerRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\n  radioRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\n  extendedEventRefreshing?: { enabled: boolean; interval?: NodeJS.Timeout };\n}\n\nexport interface CommandRequest {\n  identifier: string;\n  command: string;\n  timestamp?: string;\n  resolve: (value: CommandResponse) => void;\n  reject: (reason: any) => void;\n  timeout?: ReturnType<typeof setTimeout>;\n}\n\nexport interface CommandResponse {\n  ok: boolean;\n  response?: string;\n  error?: string;\n}\n\nexport interface RustServerInformation {\n  Hostname: string;\n  MaxPlayers: number;\n  Players: number;\n  Queued: number;\n  Joining: number;\n  EntityCount: number;\n  GameTime: string;\n  Uptime: number;\n  Map: \"Procedural Map\";\n  Framerate: number;\n  Memory: number;\n  Collections: number;\n  NetworkIn: number;\n  NetworkOut: number;\n  Restarting: boolean;\n  SaveCreatedTime: string;\n}\n"]}
>>>>>>> 6b0176cfb7a5c3b36617c7a0a9c10e4aea2e9820
